{"version":3,"sources":["images/Wallpaper_2.jpg","images/Wallpaper_3.jpg","images/Wallpaper_1.jpg","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","components/HomeComponent.js","components/ProductsComponent.js","components/SearchComponent.js","components/ProductDetailComponent.js","components/UserDetailComponent.js","components/ProfileComponent.js","components/FavoriteComponent.js","components/UploadItemComponent.js","components/HistoryComponent.js","baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/products.js","redux/auth.js","redux/bids.js","redux/users.js","redux/favorites.js","redux/store.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","required","val","length","maxLength","len","minLength","validEmail","test","isNumber","isNaN","Number","Registerer","props","isSignedIn","react_default","a","createElement","Fragment","Button","color","outline","onClick","toggleRegister","className","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isNavOpen","isModalOpen","isRegisterOpen","dropdownOpen","toggleModal","bind","assertThisInitialized","toggleNav","handleLogin","handleLogout","toggle","setState","window","innerWidth","event","loginUser","username","value","password","preventDefault","logoutUser","_this2","Navbar","dark","expand","fixed","NavbarToggler","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","react_router_dom","to","Dropdown","DropdownToggle","aria-hidden","DropdownMenu","DropdownItem","tag","Link","auth","isAuthenticated","userinfo","admin","user","isLoading","Modal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","lib","model","values","registerUser","email","room","block","hostel","phone","showroom","showfacebook","showphone","facebookProfile","firstname","lastname","text","placeholder","validators","show","messages","select","defaultValue","Row","Col","md","InputGroupAddon","addonType","check","inline","checkbox","Component","Footer","align","Loading","items","altText","src","require","caption","Home","activeIndex","next","previous","goToIndex","onExiting","onExited","animating","nextIndex","newIndex","featuredCards","products","slice","map","product","favorite","favorites","some","_id","Card","CardImg","top","width","height","images","onMouseOver","e","currentTarget","onMouseOut","CardBody","CardTitle","alert","postFavorite","CardSubtitle","bid","price","max_bid","CardText","description","CardLink","slides","item","CarouselItem","key","alt","CarouselCaption","captionHeader","style","fontWeight","fontSize","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","productsLoading","LoadingComponent","productsErrMess","Products","scrollTo","productsCards","owner","changeSelected","toggleEditModal","toggleDeleteModal","title","Search","cat","onChange","options","pos","target","checked","push","i","splice","colors","nameRegex","RegExp","list","category_matched","category","search","ListGroupItem","concat","Badge","pill","form","for","sm","xs","defaultChecked","ListGroup","RenderProduct","_ref","toggleBidEdit","approveProduct","reqBid","bids","filter","CardHeader","incr","approved","views","amount","bidder","CardFooter","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","parse","createdAt","updatedAt","ProductDetail","bidEdit","oldBid","imageArr","increaseView","bidOptions","times","errMess","isAdmin","postBid","disabled","editBid","UserDetail","toString","Profile","isEditModalOpen","isPasswordModalOpen","togglePasswordModal","original","editUser","newpassword","confirm","editPassword","matchcreds","RenderMenuItem","deleteFavorite","Favorites","console","log","requiredNum","maxVal","minVal","UploadItem","imageFiles","onDrop","image","num","document","querySelector","postProduct","files","uniqueName","multiple","compiled_default","withIcon","label","buttonText","withLabel","labelClass","imgExtension","maxFileSize","withPreview","textarea","rows","Renderbid","deadline","History","reqBids","Table","striped","bordered","hover","responsive","baseUrl","productsFailed","errmess","payload","addProducts","addUsers","users","usersLoading","editProductdispatch","editUserdispatch","USER","editPasswordDispatch","CREDS","deleteProductdispatch","resp","bidsLoading","bidsFailed","addBids","usersFailed","dispatch","localStorage","removeItem","fetchFavorites","favoritesLoading","bearer","getItem","fetch","headers","Authorization","then","response","ok","error","Error","status","statusText","message","json","addFavorites","catch","favoritesFailed","Main","isDeleteModalOpen","selectedProduct","handleSubmitEdit","fetchProducts","fetchBids","timer","JSON","now","setInterval","Newusername","fetchUsers","clearInterval","editProduct","defaultName","_this3","PrivateRouteCommon","_ref5","component","rest","objectWithoutProperties","react_router","assign","render","pathname","from","location","PrivateRoute","_ref7","components_HeaderComponent","exact","path","HomeComponent","SearchComponent","ProductsComponent","_ref6","match","params","productId","notFoundErr","undefined","ProductDetailComponent","addToView","_ref4","selectedUser","UserDetailComponent","ProfileComponent","components_UploadItemComponent","_ref3","HistoryComponent","FavoriteComponent","_ref2","userId","FooterComponent","deleteProduct","withRouter","connect","originalViews","indexOf","setItem","stringify","method","body","Content-Type","newProduct","FormData","append","creds","requestLogin","success","time_to_login","token","setTimeout","receiveLogin","newUser","newCreds","bidId","bidderId","newBid","credentials","arguments","action","objectSpread","newproduct","Auth","Bids","newbid","Users","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","es","MainComponent","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.75ed0a38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Wallpaper_2.109bf96c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Wallpaper_3.c511a19b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Wallpaper_1.24c5e005.jpg\";","import React,{Component} from 'react';\nimport {Navbar, Form, FormGroup, Label, Input, Nav, NavbarToggler,Collapse,NavItem, NavbarBrand, Modal, ModalBody, ModalHeader, Button} from 'reactstrap';\nimport {Dropdown,Row, Col,DropdownItem,DropdownMenu,DropdownToggle, InputGroupAddon} from 'reactstrap';\nimport { NavLink,Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\nimport './HeaderComponent.css'\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst ifminLength = (len) => (val) => !(val) || (val.length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nconst isNumber = (val) => !isNaN(Number(val));\n\n  function Registerer(props){\n    if(props.isSignedIn===false)\n    return (\n      <React.Fragment>\n          &nbsp;\n      <Button color=\"warning\" outline onClick={props.toggleRegister}>                    \n     <span className=\"fa fa-user-plus fa-lg\"></span> Register\n     </Button>\n      </React.Fragment>\n    );\n    else return(\n      <React.Fragment>\n      </React.Fragment>\n    );\n  }\n\n  \nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n         isNavOpen: false,\n         isModalOpen: false,\n         isRegisterOpen: false,\n         dropdownOpen: false\n           }\n        this.toggleModal=this.toggleModal.bind(this);\n        this.toggleNav=this.toggleNav.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.toggleRegister=this.toggleRegister.bind(this);\n        this.toggle=this.toggle.bind(this);\n    }\n\n    toggle(){\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\n    }\n    toggleNav(){\n        if(window.innerWidth<1200){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n    }\n\n    toggleRegister(event){\n      this.setState({\n        isRegisterOpen: !this.state.isRegisterOpen\n      });\n\n    }\n\n    handleLogin(event) {\n      this.toggleModal();\n      this.props.loginUser({username: this.username.value, password: this.password.value});\n      event.preventDefault();\n  }\n\n  handleLogout() {\n      this.props.logoutUser();\n  }\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n    render(){\n        return (\n            <React.Fragment>    \n                 <Navbar className=\"nav-color \"  dark expand=\"md\" fixed=\"top\">\n                    <div className=\"container ml-3\">\n                     <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\n                     <NavbarBrand className=\"mr-4 text-warning brand\" href=\"/home\">\n                     Bhejo\n                     </NavbarBrand>\n                     <Collapse isOpen={this.state.isNavOpen} navbar>\n                    <div className=\"nav-width align-center\">\n                     <Nav  navbar>\n                        <NavItem className=\"ml-4\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link text-warning\" to=\"/home\">\n                               <span className=\"fa fa-home fa-lg\"/> Home\n                           </NavLink>\n                        </NavItem>\n                        <Dropdown  isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                            <DropdownToggle color=\"Warning\" >\n                            <div className=\"text-warning\">\n                                <span className=\"fa fa-gift fa-lg\"/> Products\n                                                   &nbsp; <i className=\"fa fa-caret-down fa-sm\" aria-hidden=\"true\"></i>\n\n                                                </div>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/books\">Books</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/bicycles\" >Bicycles</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/stationary\" >Stationary</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/electronics\" >Electronic Gadgets</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/clothes\" >Clothes</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/sports\" >Sports</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/others\" >Others</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link text-warning\" to=\"/search\">\n                                <span className=\"fa fa-search fa-lg\"/> Search\n                            </NavLink>\n                        </NavItem>\n                        \n\n                            {\n                            (this.props.auth.isAuthenticated)?(\n                            <React.Fragment>\n                                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                <NavLink className=\"nav-link text-warning\" to=\"/favorites\">\n                                   <span className=\"fa fa-heart fa-lg\"/> My favorites\n                                </NavLink>\n                                </NavItem>\n                            </React.Fragment>\n                            ):\n                            (<div/>)\n                        }\n                        {\n                            (this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin)?(\n                                <React.Fragment>\n                                 <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                 <NavLink className=\"nav-link text-warning\" to=\"/upload_product\">\n                                    <span className=\"fa fa-upload fa-lg\"/> Upload item\n                                 </NavLink>\n                                 </NavItem>\n                                 <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                 <NavLink className=\"nav-link text-warning\" to=\"/uploads\">\n                                    <span className=\"fa fa-list fa-lg\"/> My uploads\n                                 </NavLink>\n                                 </NavItem>\n                                 <NavItem onClick={this.toggleNav} >\n                                            <NavLink className=\"nav-link text-warning\" to=\"/profile\">\n                                                  <span className=\"fa fa-user-circle-o fa-lg\"/> {this.props.auth.user && this.props.auth.user.username}\n                                             </NavLink>\n                                </NavItem>\n                                 </React.Fragment>\n\n                            ):\n                            (<div/>)\n                        }\n                         {\n                            (this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin)?(\n                              <React.Fragment>\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link text-warning\" to=\"/pending\">\n                                     <span className=\"fa fa-clock-o fa-lg\"/> Products pending\n                                </NavLink>\n                                </NavItem>\n                                <NavItem onClick={this.toggleNav} >\n                                            <NavLink className=\"nav-link text-warning\" to=\"/profile\">\n                                                  <span className=\"fa fa-user-circle-o fa-lg\"/> {this.props.auth.user && this.props.auth.user.username}\n                                             </NavLink>\n                                </NavItem>\n                              </React.Fragment>\n                            ):\n                            (<div/>)\n                        }\n                     </Nav>\n                     </div>\n                     <Nav navbar>\n                     <NavItem className=\"align-center\">\n                                    { !this.props.auth.isAuthenticated ?\n                        <Button outline color=\"warning\" onClick={this.toggleModal}>\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                            {this.props.auth.isLoading ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        :\n                                        <div>\n                                        <Button outline color=\"warning\" onClick={this.handleLogout}>\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                                            {this.props.auth.isLoading ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        </div>\n                                    }\n\n\n                    <Registerer isSignedIn={this.props.auth.isAuthenticated} toggleRegister={()=>{this.toggleRegister()}}/>\n                     </NavItem>\n                      </Nav>\n                     </Collapse>\n                    </div>\n                 </Navbar>\n                 <Modal isOpen={!this.props.auth.isAuthenticated&&this.state.isModalOpen} toggle={this.toggleModal}>\n                     <ModalHeader toggle={this.toggleModal}>\n                         Sign In\n                     </ModalHeader>\n                     <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"warning\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                     </Modal>\n                 <Modal isOpen={this.state.isRegisterOpen} toggle={this.toggleRegister}>\n                     <ModalHeader toggle={this.toggleRegister}>\n                         Register \n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"user\" onSubmit={(values) => {\n                           this.toggleRegister();\n                            this.props.registerUser({\n                              username: values.username,\n                               password: values.password,\n                               email: values.email,\n                               room: values.room,\n                               block: values.block,\n                               hostel: values.hostel,\n                               phone: values.phone,\n                               showroom: values.showroom,\n                               showfacebook: values.showfacebook,\n                               showphone: values.showphone,\n                               facebookProfile: values.facebookProfile,\n                               firstname: values.firstname,\n                               lastname: values.lastname });\n                           }}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Control.text model=\".username\" id=\"username\" name=\"username\" \n                            className=\"form-control\" placeholder=\"Username\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".username\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"password\">Password</Label>\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"firstname\">First Name</Label>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \n                            className=\"form-control\" placeholder=\"firstname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"lastname\">Last Name</Label>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \n                            className=\"form-control\" placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"hostel\">Hostel</Label>\n                            <Control.select model=\".hostel\" id=\"hostel\" className=\"form-control\" defaultValue=\"Jasper\">\n                              <option>Jasper</option> <option>Amber</option>\n                              <option>Topaz</option> <option>Sapphire</option>\n                              <option>Diamond</option> <option>Emerald</option>\n                              <option>Ruby</option> <option>Rosaline</option>\n                              <option>Opal</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"block\">Block</Label>\n                            <Control.select model=\".block\" id=\"block\" className=\"form-control\" defaultValue=\"A\">\n                              <option>A</option> <option>B</option>\n                              <option>C</option> <option>D</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"room\">Room No.</Label>\n                                <Control.text model=\".room\" id=\"room\" name=\"room\" \n                            className=\"form-control\" placeholder=\"room\" validators={{required,maxLength:maxLength(4),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".room\" show=\"touched\" messages={{required: 'Required',\n                             maxLength:' Must be 4 characters or less',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"email\">E-mail</Label>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\" \n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\n                            validEmail: ' Enter a valid email'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"phone\">Contact No.</Label>\n                                <Control.text model=\".phone\" id=\"phone\" name=\"phone\" \n                            className=\"form-control\" placeholder=\"phone\" validators={{required,minLength:minLength(10),maxLength: maxLength(10),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".phone\" show=\"touched\" messages={{required: 'Required',\n                             minLength:' Should be a valid 10 digit no.',maxLength:' Donot write country code',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                            <Row>\n                                <Col md={12}>\n                                 <Label htmlFor=\"facebookProfile\">Facebook Profile Link (Optional)</Label>\n                                 </Col>\n                                 <Col md={6}>\n                                 <InputGroupAddon addonType=\"prepend\">https://www.facebook.com/</InputGroupAddon>\n                                 </Col>\n                                <Col md={6}>\n                                <Control.text model=\".facebookProfile\" id=\"facebookProfile\" name=\"facebookProfile\" \n                            className=\"form-control\" placeholder=\"facebookProfile\" validators={{minLength: ifminLength(15),maxLength: maxLength(30)}} />\n\n                            <Errors className=\"text-danger\" model=\".facebookProfile\" show=\"touched\" messages={{\n                             minLength:' Should have at least 15 characters, otherwise donot enter this field',maxLength:' Should not exceed 30 characters'}}/>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <Row>\n                            <Label> Check the info. you want to keep public :</Label>\n                            </Row>\n                            <Row>\n                            <Col md={4}>\n                            <FormGroup check inline>                            \n                            <Control.checkbox model=\".showroom\" id=\"showroom\" name=\"showroom\" \n                            className=\"form-control\" defaultValue={false}/>\n                            <Label check> Room Info</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showphone\" id=\"showphone\" name=\"showphone\" \n                            className=\"form-control\" defaultValue={false}/>\n                            <Label check htmlFor=\"showphone\"> Contact No.</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showfacebook\" id=\"showfacebook\" name=\"showfacebook\" \n                            className=\"form-control\" defaultValue={false}/>\n                            <Label check htmlFor=\"showfacebook\"> Facebook Profile</Label>\n                            </FormGroup>\n                            </Col>\n                            </Row>\n                            <br/>\n                            <FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"warning\">Sign Up</Button>\n                            </FormGroup>\n                        </LocalForm>\n                     </ModalBody>\n                 </Modal>\n                </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React,{Component} from 'react';\n\nclass Footer extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\nrender(){\n    return(\n                    <p className=\"footer\" align=\"center\">© Copyright 2022 IPEx </p>\n          );\n}\n\n}\n\nexport default Footer;","import React from 'react';\n\nconst Loading = () => {\n    return(\n        <div className=\"col-12 heading justify-content-center loading text-warning\">\n            <br/><br/>\n            <br/><br/>\n            <h1 align=\"center\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-warning\"></span>\n            <br/><br/>\n            Loading ....</h1>\n        </div>\n    );\n};\n\nexport default Loading;","import React, { Component } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardLink,\n  CardTitle,\n  CardSubtitle,\n  Button\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Loading from './LoadingComponent';\nconst items = [\n  {\n    id: 1,\n    altText: 'Auction',\n    src: require('../images/Wallpaper_2.jpg'),\n    caption: 'First online bidding platform to sell your stuff'\n  },\n  {\n    id: 2,\n    altText: 'Slide 2',\n    src: require('../images/Wallpaper_3.jpg'),\n    caption: 'Just a click away to buy your favorites'\n  },\n  {\n    id: 3,\n    altText: 'Slide 3',\n    src: require('../images/Wallpaper_1.jpg'),\n    caption: '.......................Sell your stuff and earn money'\n  }\n];\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeIndex: 0 };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === items.length - 1\n        ? 0\n        : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? items.length - 1\n        : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    const featured = this.props.products.slice(0, 3);\n    const featuredCards = featured.map(product => {\n      let favorite;\n      if (!this.props.favorites || !this.props.favorites.products)\n        favorite = false;\n      else\n        favorite = this.props.favorites.products.some(\n          p => p._id === product._id\n        );\n      return (\n        <div className='col-12 col-md-4 mt-2 mb-2'>\n          <Card>\n            <CardImg\n              top\n              width='100%'\n              height='200'\n              src={\n                product.images[0]\n              }\n              onMouseOver={e => {\n                if (product.images[1])\n                  e.currentTarget.src =\n                    product.images[1];\n              }}\n              onMouseOut={e => {\n                e.currentTarget.src =\n                  product.images[0];\n              }}\n            />\n            <CardBody className='text-black'>\n              <CardTitle className='text-danger'>\n                <b>\n                  {product.name} &nbsp;&nbsp;\n                  {this.props.user.userinfo ? (\n                    favorite ? (\n                      <span\n                        className='fa fa-heart Option'\n                        onClick={() =>\n                          favorite\n                            ? alert('Already favorite')\n                            : this.props.postFavorite(product._id)\n                        }\n                      ></span>\n                    ) : (\n                      <span\n                        className='fa fa-heart-o Option'\n                        onClick={() =>\n                          favorite\n                            ? alert('Already favorite')\n                            : this.props.postFavorite(product._id)\n                        }\n                      ></span>\n                    )\n                  ) : (\n                    <React.Fragment />\n                  )}\n                  &nbsp; &nbsp;\n                </b>\n              </CardTitle>\n              <CardSubtitle className='text-success'>\n                <b>\n                  {product.bid ? (\n                    <React.Fragment>\n                      Bidding range : <span>&#8377;</span> {product.price} -{' '}\n                      {product.max_bid}\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <span>&#8377;</span> {product.price}\n                    </React.Fragment>\n                  )}\n                </b>\n              </CardSubtitle>\n              <CardText>{product.description.slice(0, 100) + '....'}</CardText>\n              <CardLink\n                tag={Link}\n                to={'/products/' + product._id}\n                className='text-center'\n              >\n                <Button className='button btn-block' color='info'>\n                  <i className='fa fa-eye fa-lg' /> &nbsp;View details\n                </Button>\n              </CardLink>\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n    const slides = items.map(item => {\n      return (\n        <CarouselItem\n          className='custom-tag'\n          tag='div'\n          key={item.src}\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n        >\n          <img src={item.src} alt={item.altText} className='d-block mx-auto' />\n          <CarouselCaption\n            captionHeader={item.caption}\n            className='text-danger'\n            style={{ fontWeight: 'bold', fontSize: '72' }}\n          />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <div className='container align-self-center'>\n        <div className=' d-none d-md-block'>\n          <style>\n            {`.custom-tag {\n                    margin-top: 80px;\n                    width: 100%;\n                    max-height: 500px;\n                  }`}\n          </style>\n          <Carousel\n            activeIndex={activeIndex}\n            next={this.next}\n            previous={this.previous}\n          >\n            <CarouselIndicators\n              items={items}\n              activeIndex={activeIndex}\n              onClickHandler={this.goToIndex}\n            />\n            {slides}\n            <CarouselControl\n              direction='prev'\n              directionText='Previous'\n              onClickHandler={this.previous}\n              className='indicator'\n            />\n            <CarouselControl\n              direction='next'\n              directionText='Next'\n              onClickHandler={this.next}\n              className='indicator'\n            />\n          </Carousel>\n        </div>\n        <div className='mt-4 row row-content white-text'>\n          <p>\n            The first website to sell your old as well as new items with bidding\n            allowed, in IITP. You will find various categories of products\n            here : Stationary, Electronic Gadgets, Bicycles, Books, Clothes,\n            Sports, etc. You will see a list of featured products below, based\n            upon the no. of views{' '}\n          </p>\n          <p>\n            So, what are you waiting for, just Register and login to get into\n            the store. Upload your old stuff, kept in your rooms, it may help\n            someone in need. Earn profits by allowing auction on your\n            items. Don't miss this opportunity. Just go for it.{' '}\n          </p>\n        </div>\n        <div className='row row-content white-text justify-content-center'>\n          <div className='col-12'>\n            <h3 align='center'>Featured Products</h3>\n          </div>\n\n          {this.props.productsLoading ? (\n            <Loading />\n          ) : this.props.productsErrMess ? (\n            <h3>{this.props.productsErrMess}</h3>\n          ) : (\n            featuredCards\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardLink,\n  CardTitle,\n  CardSubtitle,\n  Button\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Loading from './LoadingComponent';\n\nclass Products extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  render() {\n    const productsCards = this.props.products.map(product => {\n      let favorite;\n      if (!this.props.favorites || !this.props.favorites.products)\n        favorite = false;\n      else\n        favorite = this.props.favorites.products.some(\n          p => p._id === product._id\n        );\n      return (\n        <div className='col-12 col-md-4'>\n          <Card className='mt-2 mb-2'>\n            <CardImg\n              top\n              width='100%'\n              height='200'\n              src={\n                product.images[0]\n              }\n              onMouseOver={e => {\n                if (product.images[1])\n                  e.currentTarget.src =\n                    product.images[1];\n              }}\n              onMouseOut={e => {\n                e.currentTarget.src =\n                  product.images[0];\n              }}\n            />\n\n            <CardBody className='text-black'>\n              <CardTitle className='text-danger'>\n                <b>\n                  {product.name} &nbsp;\n                  {this.props.user.userinfo ? (\n                    favorite ? (\n                      <span\n                        className='fa fa-heart Option'\n                        onClick={() =>\n                          favorite\n                            ? alert('Already favorite')\n                            : this.props.postFavorite(product._id)\n                        }\n                      ></span>\n                    ) : (\n                      <span\n                        className='fa fa-heart-o Option'\n                        onClick={() =>\n                          favorite\n                            ? alert('Already favorite')\n                            : this.props.postFavorite(product._id)\n                        }\n                      ></span>\n                    )\n                  ) : (\n                    <React.Fragment />\n                  )}\n                  &nbsp; &nbsp;\n                  {this.props.user.userinfo &&\n                  this.props.user.userinfo._id === product.owner._id ? (\n                    <React.Fragment>\n                      <span\n                        onClick={() => {\n                          this.props.changeSelected(product._id);\n                          this.props.toggleEditModal();\n                        }}\n                        className='Option fa fa-pencil'\n                      />\n                      &nbsp; &nbsp;{' '}\n                      <span\n                        onClick={() => {\n                          this.props.changeSelected(product._id);\n                          this.props.toggleDeleteModal();\n                        }}\n                        className='Option fa fa-trash'\n                      />\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment />\n                  )}\n                </b>\n              </CardTitle>\n              <CardSubtitle className='text-success'>\n                <b>\n                  {product.bid ? (\n                    <React.Fragment>\n                      Bidding range : <span>&#8377;</span> {product.price} -{' '}\n                      {product.max_bid}\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <span>&#8377;</span> {product.price}\n                    </React.Fragment>\n                  )}\n                </b>\n              </CardSubtitle>\n              <CardText>{product.description.slice(0, 100) + '....'}</CardText>\n              <CardLink\n                tag={Link}\n                to={'/products/' + product._id}\n                className='text-center'\n              >\n                <Button className='button btn-block' color='info'>\n                  <i className='fa fa-eye fa-lg' /> &nbsp;View details\n                </Button>\n              </CardLink>\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    return (\n      <div className='container full'>\n        <div className='heading row row-content white-text justify-content-center'>\n          <div className='col-12'>\n            <h3 align='center'>{this.props.title}</h3>\n          </div>\n          {this.props.products.length === 1 ? (\n            this.props.productsLoading ? (\n              <Loading />\n            ) : this.props.productsErrMess ? (\n              <h3>{this.props.productsErrMess}</h3>\n            ) : (\n              productsCards\n            )\n          ) : this.props.productsLoading ? (\n            <Loading />\n          ) : this.props.productsErrMess ? (\n            <h3>{this.props.productsErrMess}</h3>\n          ) : this.props.products.length === 0 ? (\n            <div className='justify-content-center'>\n              <br />\n              <br />\n              <br />\n              <br />\n              <h5 align='center'>There are no products in this list.</h5>\n            </div>\n          ) : (\n            productsCards\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  Row,\n  Col,\n  Label,\n  Input,\n  Badge,\n  ListGroupItem,\n  ListGroup\n} from \"reactstrap\";\nimport Loading from \"./LoadingComponent.js\";\nimport { Link } from \"react-router-dom\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      price: 100000,\n      cat: [\n        \"Stationary\",\n        \"Electronic Gadgets\",\n        \"Bicycles\",\n        \"Clothes\",\n        \"Sports\",\n        \"Others\",\n        \"Books\"\n      ]\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    const options = this.state.cat;\n    let pos = -1;\n\n    if (e.target.checked) {\n      options.push(e.target.value);\n    } else {\n      let i = 0;\n      for (; i < options.length; i++) {\n        if (options[i] === e.target.value) {\n          pos = i;\n          break;\n        } else {\n        }\n      }\n      options.splice(pos, 1);\n    }\n    this.setState({ cat: options });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    var colors = [\"warning\", \"danger\", \"success\", \"info\", \"secondary\"];\n    var nameRegex = new RegExp(this.state.name, \"i\");\n    const list = this.props.products.map(product => {\n      let category_matched = this.state.cat.some(\n        category => category === product.cat\n      );\n      if (\n        product.name.search(nameRegex) !== -1 &&\n        product.price <= this.state.price &&\n        category_matched\n      )\n        return (\n          <ListGroupItem key={product._id} className=\"text-black\">\n            <Link to={`/products/${product._id}`}>\n              <b>{`${product.name}  `}</b>\n            </Link>\n            <Badge color={colors[product.cat.length % 5]} pill>\n              {\" \"}\n              {product.cat}\n            </Badge>\n            {this.props.user.userinfo &&\n            this.props.user.userinfo._id === product.owner._id ? (\n              <React.Fragment>\n                &nbsp; &nbsp;\n                <span\n                  onClick={() => {\n                    this.props.changeSelected(product._id);\n                    this.props.toggleEditModal();\n                  }}\n                  className=\"Option fa fa-pencil\"\n                />\n                {\"  \"}&nbsp; &nbsp;{\" \"}\n                <span\n                  onClick={() => {\n                    this.props.changeSelected(product._id);\n                    this.props.toggleDeleteModal();\n                  }}\n                  className=\"Option fa fa-trash\"\n                />\n              </React.Fragment>\n            ) : (\n              <React.Fragment />\n            )}\n            <br />{\" \"}\n            <p className=\"ml-auto text-success\">\n              {\" \"}\n              <b>\n                {product.bid ? (\n                  <React.Fragment>\n                    Bidding range : <span>&#8377;</span> {product.price} -{\" \"}\n                    {product.max_bid}\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    <span>&#8377;</span> {product.price}\n                  </React.Fragment>\n                )}\n              </b>\n            </p>\n            <p>\n              Owner :{\" \"}\n              <Link to={`products/${product._id}/owner`}>\n                {product.owner.firstname + \" \" + product.owner.lastname}\n              </Link>{\" \"}\n            </p>\n          </ListGroupItem>\n        );\n      else return <React.Fragment />;\n    });\n    if (this.props.productsLoading) {\n      return (\n        <div className=\"container loading white-text\">\n          <div className=\"row\">\n            <Loading />\n          </div>\n        </div>\n      );\n    } else if (this.props.productsErrMess) {\n      return (\n        <div className=\"container loading white-text\">\n          <div className=\"row heading\">\n            <div className=\"col-12\">\n              <br />\n              <br />\n              <br />\n              <br />\n              <h3>{this.props.productsErrMess}</h3>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container loading white-text\">\n          <div className=\"row\">\n            <div className=\"col-12 heading\">\n              <h3 align=\"center\">Search your product here : </h3>\n              <Form>\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"name\">Name of product</Label>\n                      <Input\n                        type=\"name\"\n                        name=\"name\"\n                        id=\"name\"\n                        value={this.state.name}\n                        onChange={e => {\n                          this.setState({ name: e.target.value });\n                        }}\n                        placeholder=\"Enter name of the product\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"price\">Maximum you can afford</Label>\n                      <Input\n                        type=\"price\"\n                        name=\"price\"\n                        defaultValue=\"100000\"\n                        id=\"price\"\n                        value={this.state.price}\n                        onChange={e => {\n                          this.setState({\n                            price: isNaN(Number(e.target.value))\n                              ? 100000\n                              : Number(e.target.value)\n                          });\n                        }}\n                        placeholder=\"Enter name of price\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={6} md={2}>\n                    Category :{\" \"}\n                  </Col>\n                </Row>\n                <FormGroup check>\n                  <Row>\n                    <Col xs={6} md={3}>\n                      <Label check for=\"Books\">\n                        <Input\n                          defaultChecked\n                          type=\"checkbox\"\n                          onChange={this.onChange}\n                          id=\"Books\"\n                          value=\"Books\"\n                          name=\"cat\"\n                        />\n                        Books\n                      </Label>\n                    </Col>\n                    <Col xs={6} md={3}>\n                      <Label check for=\"Stationary\">\n                        <Input\n                          defaultChecked\n                          type=\"checkbox\"\n                          onChange={this.onChange}\n                          id=\"Stationary\"\n                          value=\"Stationary\"\n                          name=\"cat\"\n                        />\n                        Stationary\n                      </Label>\n                    </Col>\n\n                    <Col xs={6} md={3}>\n                      <Label check for=\"Bicycles\">\n                        <Input\n                          defaultChecked\n                          type=\"checkbox\"\n                          onChange={this.onChange}\n                          id=\"Bicycles\"\n                          value=\"Bicycles\"\n                          name=\"cat\"\n                        />\n                        Bicycles\n                      </Label>\n                    </Col>\n                    <Col xs={6} md={3}>\n                      <Label check for=\"Electronic Gadgets\">\n                        <Input\n                          defaultChecked\n                          type=\"checkbox\"\n                          onChange={this.onChange}\n                          id=\"Electronic Gadgets\"\n                          value=\"Electronic Gadgets Science\"\n                          name=\"cat\"\n                        />\n                        Electronic Gadgets\n                      </Label>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={6} md={3}>\n                      <Label check for=\"Clothes\">\n                        <Input\n                          defaultChecked\n                          type=\"checkbox\"\n                          onChange={this.onChange}\n                          id=\"Clothes\"\n                          value=\"Clothes\"\n                          name=\"cat\"\n                        />\n                        Clothes\n                      </Label>\n                    </Col>\n                    <Col xs={6} md={3}>\n                      <Label check for=\"Sports\">\n                        <Input\n                          defaultChecked\n                          type=\"checkbox\"\n                          onChange={this.onChange}\n                          id=\"Sports\"\n                          value=\"Sports\"\n                          name=\"cat\"\n                        />\n                        Sports\n                      </Label>\n                    </Col>\n                    <Col xs={6} md={3}>\n                      <Label check for=\"Others\">\n                        <Input\n                          defaultChecked\n                          type=\"checkbox\"\n                          onChange={this.onChange}\n                          id=\"Others\"\n                          value=\"Others\"\n                          name=\"cat\"\n                        />\n                        Others\n                      </Label>\n                    </Col>\n                  </Row>\n                </FormGroup>\n              </Form>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <br />\n              <ListGroup>{list}</ListGroup>\n            </div>\n          </div>\n          <br />\n        </div>\n      );\n    }\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport {\n  Row,\n  Col,\n  Card,\n  CardText,\n  CardHeader,\n  CardFooter,\n  CardBody,\n  Carousel,\n  CarouselItem,\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  CardLink,\n  CarouselControl,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  CarouselIndicators\n} from 'reactstrap';\nimport Loading from './LoadingComponent';\nimport { Link } from 'react-router-dom';\nfunction RenderProduct({\n  toggleModal,\n  product,\n  toggleEditModal,\n  toggleBidEdit,\n  changeSelected,\n  user,\n  favorite,\n  postFavorite,\n  approveProduct,\n  bids\n}) {\n  let reqBid = bids.filter(bid => bid.product && (bid.product._id === product._id) );\n  if (product != null)\n    return (\n      <Card>\n        <CardHeader tag='h3' className='text-danger'>\n          <b>{product.name}</b> &nbsp; &nbsp;\n          {user.userinfo ? (\n            favorite ? (\n              <span\n                className='fa fa-heart Option'\n                onClick={() =>\n                  favorite\n                    ? alert('Already favorite')\n                    : postFavorite(product._id)\n                }\n              ></span>\n            ) : (\n              <span\n                className='fa fa-heart-o Option'\n                onClick={() =>\n                  favorite\n                    ? alert('Already favorite')\n                    : postFavorite(product._id)\n                }\n              ></span>\n            )\n          ) : (\n            <React.Fragment />\n          )}\n          &nbsp; &nbsp; &nbsp;&nbsp;\n          {user.userinfo && user.userinfo._id === product.owner._id ? (\n            <span\n              className='fa fa-pencil Option'\n              onClick={() => {\n                changeSelected(product._id);\n                toggleEditModal();\n              }}\n            />\n          ) : (\n            <React.Fragment />\n          )}\n          <div className='ml-auto text-success'>\n            <b>\n              {product.bid ? (\n                <React.Fragment>\n                  Bidding range : <span>&#8377;</span> {product.price} -{' '}\n                  {product.max_bid}\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <span>&#8377;</span> {product.price}\n                </React.Fragment>\n              )}\n            </b>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <CardText>\n            <b> Category: </b> {product.cat}\n            {product.bid ? (\n              <React.Fragment>\n                <br />\n                <br />\n                <b>\n                  Minimum Increment in bidding price :\n                </b> <span>&#8377;</span> {product.incr}\n              </React.Fragment>\n            ) : (\n              <React.Fragment />\n            )}\n            <br />\n            <br />\n            <b> Owner : </b>{' '}\n            <Link to={`${product._id}/owner`}>\n              {product.owner.firstname + ' ' + product.owner.lastname}\n            </Link>{' '}\n            <br />\n            <br />\n            <b> Email of owner : </b> {product.owner.email} <br />\n            <br />\n            <b>Descrption: </b>\n            <br /> {product.description} <br />\n            <br />\n            <b>Approved by admin: </b>\n            <br /> {product.approved ? 'Yes' : 'No'} <br />\n            <br />\n            <b> No. of Views: </b> <br /> {product.views} <br />\n            <br />\n            <b> Highest bid: </b> <br />{' '}\n            {reqBid[0] ? (\n              <React.Fragment>&#8377; {reqBid[0].amount}</React.Fragment>\n            ) : (\n              'No bids yet'\n            )}{' '}\n            <br />\n            {user.userinfo && user.userinfo.admin && !product.approved ? (\n              <div className='text-center'>\n                <br />\n                <Button\n                  color='success'\n                  onClick={() => {\n                    approveProduct(product._id);\n                  }}\n                >\n                  Approve <i className='fa fa-check' />\n                </Button>\n              </div>\n            ) : (\n              <React.Fragment />\n            )}\n            {user.userinfo &&\n            !user.userinfo.admin &&\n            product.approved &&\n            product.owner._id === user.userinfo._id ? (\n              <div className='text-center'>\n                <br />\n                <CardLink tag={Link} to={`/bid_history/${product._id}`}>\n                  <Button color='warning'>\n                    View bid history <i className='fa fa-history' />\n                  </Button>\n                </CardLink>\n              </div>\n            ) : (\n              <React.Fragment />\n            )}\n            {user.userinfo &&\n            !user.userinfo.admin &&\n            product.owner._id !== user.userinfo._id &&\n            product.bid ? (\n              reqBid.some(bid => bid.bidder._id === user.userinfo._id) ? (\n                <React.Fragment>\n                  <br />\n                  <b> My bid: </b> <br />\n                  &#8377;{' '}\n                  {\n                    reqBid.filter(\n                      bid =>\n                        bid.bidder._id === user.userinfo._id &&\n                        bid.product._id === product._id\n                    )[0].amount\n                  }{' '}\n                  &nbsp; &nbsp;&nbsp; &nbsp;\n                  <span\n                    className='fa fa-pencil Option'\n                    onClick={() => {\n                      toggleBidEdit(\n                        reqBid.filter(\n                          bid =>\n                            bid.bidder._id === user.userinfo._id &&\n                            bid.product._id === product._id\n                        )[0]\n                      );\n                    }}\n                  />{' '}\n                  <br />\n                  <br />\n                </React.Fragment>\n              ) : (\n                <div className='text-center'>\n                  <br />\n                  <Button\n                    color='warning'\n                    onClick={() => {\n                      toggleModal();\n                    }}\n                  >\n                    Bid <i className='fa fa-dollar' />\n                  </Button>\n                </div>\n              )\n            ) : (\n              <React.Fragment />\n            )}\n          </CardText>\n          <br />\n        </CardBody>\n        <CardFooter className='text-muted'>\n          <Row>\n            <Col md={6}>\n              Created at :{' '}\n              {new Intl.DateTimeFormat('en-US', {\n                year: 'numeric',\n                month: 'short',\n                day: '2-digit',\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true\n              }).format(new Date(Date.parse(product.createdAt)))}\n            </Col>\n            <Col md={6}>\n              Last updated at :{' '}\n              {new Intl.DateTimeFormat('en-US', {\n                year: 'numeric',\n                month: 'short',\n                day: '2-digit',\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true\n              }).format(new Date(Date.parse(product.updatedAt)))}\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  else return <div></div>;\n}\n\nvar items = [];\nclass ProductDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeIndex: 0,\n      isModalOpen: false,\n      bidEdit: false,\n      amount: 0,\n      oldBid: ''\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.toggleBidEdit = this.toggleBidEdit.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    items = [];\n    if (this.props.product) {\n      let imageArr = this.props.product.images.filter(name => !!name);\n      for (let i = 0; i < imageArr.length; i++) {\n        items.push({\n          id: i,\n          altText: this.props.product.images[i],\n          src:\n            this.props.product.images[i]\n        });\n      }\n    }\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  toggleBidEdit(bid) {\n    this.setState({\n      bidEdit: !this.state.bidEdit\n    });\n    this.setState({ oldBid: bid });\n    this.setState({ amount: bid.amount });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    if (this.props.product && this.props.user.isAuthenticated) {\n      this.props.increaseView(this.props.product._id, this.props.product.views);\n    }\n    if (this.props.product) this.setState({ amount: this.props.product.price });\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === items.length - 1\n        ? 0\n        : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? items.length - 1\n        : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    let bidOptions = [];\n    if (this.props.product && this.props.product.bid) {\n      let times =\n        (this.props.product.max_bid - this.props.product.price) /\n        this.props.product.incr;\n      for (let i = 0; i <= times; i++) {\n        bidOptions.push(\n          <option>\n            {this.props.product.price + i * this.props.product.incr}\n          </option>\n        );\n      }\n    }\n\n    const slides = items.map(item => {\n      return (\n        <CarouselItem\n          className='custom-tag'\n          tag='div'\n          key={item.src}\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n        >\n          <img src={item.src} alt={item.altText} className='d-block mx-auto' />\n        </CarouselItem>\n      );\n    });\n\n    if (this.props.isLoading || this.props.bids.isLoading) {\n      return (\n        <div className='container'>\n          <div className='row'>\n            <Loading />\n          </div>\n        </div>\n      );\n    } else if (this.props.errMess) {\n      return (\n        <div className='container loading'>\n          <div className='row heading white-text'>\n            <div className='col-12'>\n              <br />\n              <br />\n              <br />\n              <br />\n              <h3>{this.props.errMess}</h3>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.props.bids.errMess) {\n      return (\n        <div className='container loading'>\n          <div className='row heading white-text'>\n            <div className='col-12'>\n              <br />\n              <br />\n              <br />\n              <br />\n              <h3>{this.props.bids.errMess}</h3>\n            </div>\n          </div>\n        </div>\n      );\n    } else\n      return (\n        <div className='container full'>\n          <div className='heading'>\n            <style>\n              {`.custom-tag {\n                    max-width: 100vw;\n                    max-height: 700px;\n                  }`}\n            </style>\n            <Carousel\n              activeIndex={activeIndex}\n              next={this.next}\n              previous={this.previous}\n            >\n              <CarouselIndicators\n                items={items}\n                activeIndex={activeIndex}\n                onClickHandler={this.goToIndex}\n              />\n              {slides}\n              <CarouselControl\n                direction='prev'\n                directionText='Previous'\n                onClickHandler={this.previous}\n                className='indicator'\n              />\n              <CarouselControl\n                direction='next'\n                directionText='Next'\n                onClickHandler={this.next}\n                className='indicator'\n              />\n            </Carousel>\n          </div>\n          <div className='row'>\n            <div className='col-12'>\n              <br /> <br />\n              <RenderProduct\n                product={this.props.product}\n                isAdmin={this.props.isAdmin}\n                toggleEditModal={this.props.toggleEditModal}\n                changeSelected={this.props.changeSelected}\n                user={this.props.user}\n                postFavorite={this.props.postFavorite}\n                favorite={this.props.favorite}\n                approveProduct={this.props.approveProduct}\n                toggleModal={this.toggleModal}\n                bids={this.props.bids.bids}\n                toggleBidEdit={this.toggleBidEdit}\n              ></RenderProduct>\n              <br />\n              <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>\n                  Bid for a product\n                </ModalHeader>\n                <ModalBody>\n                  <Form\n                    onSubmit={e => {\n                      e.preventDefault();\n                      this.props.postBid(\n                        this.props.product._id,\n                        this.props.user.userinfo._id,\n                        this.state.amount\n                      );\n                    }}\n                  >\n                    <FormGroup>\n                      <Label htmlFor='username'>Username of bidder</Label>\n                      <Input\n                        type='text'\n                        id='username'\n                        name='username'\n                        value={\n                          this.props.user.user\n                            ? this.props.user.user.username\n                            : ''\n                        }\n                        disabled\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label htmlFor='product'>Name of product</Label>\n                      <Input\n                        type='product'\n                        id='product'\n                        name='product'\n                        value={this.props.product.name}\n                        disabled\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label htmlFor='amount'>\n                        Amount you want to bid (in &#8377;) :\n                      </Label>\n                      <Input\n                        type='select'\n                        name='amount'\n                        id='amount'\n                        value={this.state.amount}\n                        onChange={e => {\n                          this.setState({ amount: e.target.value });\n                        }}\n                      >\n                        {bidOptions}\n                      </Input>\n                    </FormGroup>\n                    <Button type='submit' value='submit' color='warning'>\n                      Bid\n                    </Button>\n                  </Form>\n                </ModalBody>\n              </Modal>\n              <Modal isOpen={this.state.bidEdit} toggle={this.toggleBidEdit}>\n                <ModalHeader toggle={this.toggleBidEdit}>\n                  Edit your Bid\n                </ModalHeader>\n                <ModalBody>\n                  <Form\n                    onSubmit={e => {\n                      e.preventDefault();\n                      this.props.editBid(\n                        this.state.oldBid._id,\n                        this.state.amount\n                      );\n                    }}\n                  >\n                    <FormGroup>\n                      <Label htmlFor='username'>Username of bidder</Label>\n                      <Input\n                        type='text'\n                        id='username'\n                        name='username'\n                        value={\n                          this.props.user.user\n                            ? this.props.user.user.username\n                            : ''\n                        }\n                        disabled\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label htmlFor='product'>Name of product</Label>\n                      <Input\n                        type='product'\n                        id='product'\n                        name='product'\n                        value={this.props.product.name}\n                        disabled\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label htmlFor='amount'>\n                        Amount you want to bid (in &#8377;) :\n                      </Label>\n                      <Input\n                        type='select'\n                        name='amount'\n                        id='amount'\n                        value={this.state.amount}\n                        onChange={e => {\n                          this.setState({ amount: e.target.value });\n                        }}\n                      >\n                        {bidOptions}\n                      </Input>\n                    </FormGroup>\n                    <Button type='submit' value='submit' color='warning'>\n                      Bid\n                    </Button>\n                  </Form>\n                </ModalBody>\n              </Modal>\n            </div>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default ProductDetail;\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, CardText } from 'reactstrap';\nimport Loading from './LoadingComponent';\n\nclass UserDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    if (this.props.isLoading) {\n      return (\n        <div className='container'>\n          <div className='row'>\n            <Loading />\n          </div>\n        </div>\n      );\n    } else if (this.props.errMess) {\n      return (\n        <div className='container loading white-text'>\n          <div className='row heading'>\n            <div className='col-12'>\n              <br />\n              <br />\n              <br />\n              <br />\n              <h3>{this.props.errMess}</h3>\n            </div>\n          </div>\n        </div>\n      );\n    } else\n      return (\n        <div className='container mt-6 home text-center align-self-center'>\n          <div className='row text-center justify-content-center mt-2'>\n            <br />\n            <Card className='heading'>\n              <CardHeader>\n                <h3>User Details</h3>\n              </CardHeader>\n              <CardBody>\n                <CardText>\n                  <h5>\n                    {' '}\n                    First Name : {'          ' + this.props.user.firstname}\n                  </h5>\n                  <h5>\n                    {' '}\n                    Last Name : {'          ' + this.props.user.lastname}\n                  </h5>\n                  <h5> Email : {'          ' + this.props.user.email}</h5>\n                  <h5> Username : {'          ' + this.props.user.username}</h5>\n                  {this.props.user.showroom ? (\n                    <h5>\n                      {' '}\n                      Address :{' '}\n                      {'Room No.          ' +\n                        this.props.user.block +\n                        '-' +\n                        this.props.user.room +\n                        ', ' +\n                        this.props.user.hostel}\n                    </h5>\n                  ) : (\n                    <React.Fragment />\n                  )}\n                  {this.props.user.showphone ? (\n                    <h5> Contact No. : {'  +91-' + this.props.user.phone}</h5>\n                  ) : (\n                    <React.Fragment />\n                  )}\n                  {this.props.user.showfacebook ? (\n                    <h5>\n                      {' '}\n                      Facebook Profile Link :{' '}\n                      <a\n                        href={\n                          'https://www.facebook.com/' +\n                          this.props.user.facebookProfile\n                        }\n                      >\n                        <span className='fa fa-facebook'></span>\n                      </a>\n                    </h5>\n                  ) : (\n                    <React.Fragment />\n                  )}\n                </CardText>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default UserDetail;\n","import React,{Component} from 'react';\nimport {Card,CardBody,CardHeader,Label,Row,Col,InputGroupAddon,CardText,Button,Modal,ModalBody,ModalHeader,FormGroup} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => {return val && val.toString().length};\nconst maxLength = (len) => (val) => {return !(val) || (val.toString().length <= len);}\nconst minLength = (len) => (val) => (val) && (val.toString().length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nconst matchcreds = (original) => (val) =>  (val===original);\nconst ifminLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\n\nclass Profile extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            isEditModalOpen: false,\n            isPasswordModalOpen: false\n        }\n        this.toggleEditModal=this.toggleEditModal.bind(this);\n        this.togglePasswordModal=this.togglePasswordModal.bind(this);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\n    togglePasswordModal(){\n        this.setState({\n            isPasswordModalOpen: !this.state.isPasswordModalOpen\n        });\n    }\n\n    toggleEditModal(){\n            this.setState({isEditModalOpen: !this.state.isEditModalOpen});\n          }\n      \n\nrender(){\n    if(this.props.auth.userinfo===null){\n        return (\n            <div className=\"row heading\">\n                Failed to fetch. Please reload the page\n            </div>\n        )\n    }\n    return(\n\n        <div className=\"container mt-6 home text-center align-self-center\">\n            <div className=\"row text-center justify-content-center mt-2\">\n            \n            <Card className=\"heading\">\n                \n        <CardHeader><h3>My Profile</h3></CardHeader>\n        <CardBody>\n          <CardText>\n          <h5> First Name : {'          '+this.props.auth.userinfo.firstname}</h5>\n          <h5> Last Name : {'          '+this.props.auth.userinfo.lastname}</h5>\n          <h5> Email : {'          '+this.props.auth.userinfo.email}</h5>\n          <h5> Username : {'          '+this.props.auth.user.username}</h5>\n          <h5> Address : {'Room No.          '+this.props.auth.userinfo.block+'-'+this.props.auth.userinfo.room+ ', '+this.props.auth.userinfo.hostel}</h5>{this.props.auth.userinfo.showroom?(' (Publicly Visible)'):(<React.Fragment/>)}\n          <h5> Contact No. : {'  +91-'+this.props.auth.userinfo.phone}</h5>{this.props.auth.userinfo.showphone?(' (Publicly Visible)'):(<React.Fragment/>)}\n          <h5> Facebook Profile Link : <a href={'https://www.facebook.com/'+this.props.auth.userinfo.facebookProfile}><span className=\"fa fa-facebook\"></span></a></h5>{this.props.auth.userinfo.showfacebook?(' (Publicly Visible)'):(<React.Fragment/>)}\n          \n          </CardText>\n          \n          <Button color=\"info\" onClick={this.toggleEditModal}>Edit &nbsp;{'   '}<span className=\"fa fa-pencil\"/></Button>\n        {' '}\n{this.props.auth.userinfo.admin?<div/>:        <Button color=\"info\" onClick={this.togglePasswordModal}>Change Password &nbsp;{'   '}<span className=\"fa fa-key\"/></Button>}\n\n        </CardBody>\n          </Card>\n            </div>\n            <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\n                     <ModalHeader toggle={this.toggleEditModal}>\n                         Edit Profile\n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"user\" onSubmit={(values) => {\n                            this.toggleEditModal();\n                            this.props.editUser(this.props.auth.userinfo._id, values.firstname, values.lastname, values.room, values.email, values.block, values.hostel, values.phone, values.facebookProfile, values.showfacebook, values.showphone, values.showroom );\n                     }}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Control.text model=\".username\" id=\"username\" name=\"username\" \n                            defaultValue={this.props.auth.user.username}\n                            className=\"form-control\" placeholder=\"Username\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".username\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"firstname\">First Name</Label>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \n                            defaultValue={this.props.auth.userinfo.firstname}\n                            className=\"form-control\" placeholder=\"firstname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"lastname\">Last Name</Label>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" defaultValue={this.props.auth.userinfo.lastname}\n                            className=\"form-control\" placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"hostel\">Hostel</Label>\n                            <Control.select model=\".hostel\" id=\"hostel\" className=\"form-control\" defaultValue={this.props.auth.userinfo.hostel}>\n                              <option>Jasper</option> <option>Amber</option>\n                              <option>Topaz</option> <option>Sapphire</option>\n                              <option>Diamond</option> <option>Emerald</option>\n                              <option>Ruby</option> <option>Rosaline</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"block\">Block</Label>\n                            <Control.select model=\".block\" id=\"block\" className=\"form-control\" defaultValue={this.props.auth.userinfo.block}>\n                              <option>A</option> <option>B</option>\n                              <option>C</option> <option>D</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"room\">Room No.</Label>\n                                <Control.text model=\".room\" id=\"room\" name=\"room\" defaultValue={this.props.auth.userinfo.room}\n                            className=\"form-control\" placeholder=\"room\" validators={{required,maxLength:maxLength(4),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".room\" show=\"touched\" messages={{required: 'Required',\n                             maxLength:' Must be 4 characters or less',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"email\">E-mail</Label>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\" defaultValue={this.props.auth.userinfo.email}\n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\n                            validEmail: ' Enter a valid email'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"phone\">Contact No.</Label>\n                                <Control.text model=\".phone\" id=\"phone\" name=\"phone\" defaultValue={this.props.auth.userinfo.phone}\n                            className=\"form-control\" placeholder=\"phone\" validators={{required,minLength:minLength(10),maxLength: maxLength(10),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".phone\" show=\"touched\" messages={{required: 'Required',\n                             minLength:' Should be a valid 10 digit no.',maxLength:' Donot write country code',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                            <Row>\n                                <Col md={12}>\n                                 <Label htmlFor=\"facebookProfile\">Facebook Profile Link (Optional)</Label>\n                                 </Col>\n                                 <Col md={6}>\n                                 <InputGroupAddon addonType=\"prepend\">https://www.facebook.com/</InputGroupAddon>\n                                 </Col>\n                                <Col md={6}>\n                                <Control.text model=\".facebookProfile\" id=\"facebookProfile\" name=\"facebookProfile\" defaultValue={this.props.auth.userinfo.facebookProfile}\n                            className=\"form-control\" placeholder=\"facebookProfile\" validators={{minLength: ifminLength(15),maxLength: maxLength(30)}} />\n\n                            <Errors className=\"text-danger\" model=\".facebookProfile\" show=\"touched\" messages={{\n                             minLength:' Should have at least 15 characters, otherwise donot enter this field',maxLength:' Should not exceed 30 characters'}}/>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <Row>\n                            <Label> Check the info. you want to keep public :</Label>\n                            </Row>\n                            <Row>\n                            <Col md={4}>\n                            <FormGroup check inline>                            \n                            <Control.checkbox model=\".showroom\" id=\"showroom\" name=\"showroom\"\n                            defaultValue={this.props.auth.userinfo.showroom} \n                            className=\"form-control\"/>\n                            <Label check> Room Info</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showphone\" id=\"showphone\" name=\"showphone\" \n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.showphone}/>\n                            <Label check htmlFor=\"showphone\"> Contact No.</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showfacebook\" id=\"showfacebook\" name=\"showfacebook\" \n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.showfacebook}/>\n                            <Label check htmlFor=\"showfacebook\"> Facebook Profile</Label>\n                            </FormGroup>\n                            </Col>\n                            </Row>\n                            <br/>\n                            <FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"warning\">Submit</Button>\n                            </FormGroup>\n                        </LocalForm>\n                     </ModalBody>\n               \n          </Modal>\n\n          <Modal isOpen={this.state.isPasswordModalOpen} toggle={this.togglePasswordModal}>\n                     <ModalHeader toggle={this.togglePasswordModal}>\n                         Change Password\n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"passwordform\" onSubmit={(values) => {\n                         if(values.newpassword===values.confirm){\n                               this.togglePasswordModal();\n                               this.props.editPassword(this.props.auth.userinfo._id, this.props.auth.user.username, \n                                values.newpassword);     \n                               }\n                        else {\n                            alert(\"Your passwords didn't match. Please try again\");\n                        }\n                                 }}>\n                            <FormGroup>\n                            <Label htmlFor=\"password\">Current Password</Label>\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20),\n                            matchcreds: matchcreds(this.props.auth.user.password)}} />\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less',\n                            matchcreds: ' Enter the correct password'}}/>\n                            </FormGroup>\n\n                            <FormGroup>\n                            <Label htmlFor=\"newpassword\">New password</Label>\n                                <Control.password model=\".newpassword\" id=\"newpassword\" name=\"newpassword\" \n                            className=\"form-control\" placeholder=\"New Password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\n                            }}  />\n                            <Errors className=\"text-danger\" model=\".newpassword\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\n                      }}/>\n                            </FormGroup>\n                            \n                            <FormGroup>\n                            <Label htmlFor=\"confirm\">Confirm Password</Label>\n                                <Control.password model=\".confirm\" id=\"confirm\" name=\"confirm\" \n                            className=\"form-control\"\n                            placeholder=\"Re-enter the new password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\n                                 } } />\n                            <Errors className=\"text-danger\" model=\".confirm\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\n                       }}/>\n                            </FormGroup>\n                            \n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                     </ModalBody>               \n          </Modal>\n            </div>\n        );\n}\n\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardLink,\n  CardTitle,\n  CardSubtitle,\n  Button\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Loading from './LoadingComponent';\n\nfunction RenderMenuItem({ product, deleteFavorite }) {\n  return (\n    <Card className='mt-2 mb-2'>\n      <CardImg\n        top\n        width='100%'\n        height='200'\n        src={\n          product.images[0]\n        }\n        onMouseOver={e => {\n          if (product.images[1])\n            e.currentTarget.src =\n              product.images[1];\n        }}\n        onMouseOut={e => {\n          e.currentTarget.src =\n            product.images[0];\n        }}\n      />\n\n      <CardBody className='text-black'>\n        <CardTitle className='text-danger'>\n          <b>\n            {product.name} &nbsp;\n            <Button\n              outline\n              color='danger'\n              onClick={() => {\n                deleteFavorite(product._id);\n              }}\n            >\n              <span className='fa fa-times'></span>\n            </Button>\n          </b>\n        </CardTitle>\n        <CardSubtitle className='text-success'>\n          <b>\n            {product.bid ? (\n              <React.Fragment>\n                Bidding range : <span>&#8377;</span> {product.price} -{' '}\n                {product.max_bid}\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <span>&#8377;</span> {product.price}\n              </React.Fragment>\n            )}\n          </b>\n        </CardSubtitle>\n        <CardText>{product.description.slice(0, 100) + '....'}</CardText>\n        <CardLink\n          tag={Link}\n          to={'/products/' + product._id}\n          className='text-center'\n        >\n          <Button className='button btn-block' color='info'>\n            <i className='fa fa-eye fa-lg' /> &nbsp;View details\n          </Button>\n        </CardLink>\n      </CardBody>\n    </Card>\n  );\n}\n\nclass Favorites extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    if (this.props.favorites.isLoading) {\n      return (\n        <div className='container'>\n          <div className='row heading white-text'>\n            <Loading />\n          </div>\n        </div>\n      );\n    } else if (this.props.favorites.errMess) {\n      return (\n        <div className='container full'>\n          <div className='row heading white-text justify-content-center'>\n            <h4 align='center'>You have No favorites</h4>\n          </div>\n        </div>\n      );\n    } else if (\n      this.props.favorites.favorites &&\n      this.props.favorites.favorites.products\n    ) {\n      const favorites = this.props.favorites.favorites.products.map(product => {\n        return (\n          <div key={product._id} className='col-12 col-md-4 white-text'>\n            <RenderMenuItem\n              product={product}\n              deleteFavorite={this.props.deleteFavorite}\n            />\n          </div>\n        );\n      });\n      console.log(this.props.favorites);\n      return (\n        <div className='container full'>\n          <div className='row heading'>\n            <div className='col-12 white-text justify-content-center mt-4'>\n              <h3 align='center'>My Favorites</h3>\n              <hr />\n            </div>\n          </div>\n          <div className='row'>{favorites}</div>\n        </div>\n      );\n    } else {\n      console.log(this.props.favorites);\n      return (\n        <div className='container full'>\n          <div className='row heading white-text justify-content-center'>\n            <h4 align='center'>You have no favorites</h4>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './LoadingComponent';\nimport './UploadItemComponent.css'\n\nconst required = val => val && val.length;\nconst requiredNum = val => !!val;\nconst minLength = len => val => val && val.length >= len;\nconst maxVal = len => val => !val || val <= len;\nconst minVal = len => val => val && val >= len;\nconst isNumber = val => !isNaN(Number(val));\nconst multiple = num => val => !val || val % num === 0;\n\n\nclass UploadItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: false,\n      images: [],\n      imageFiles: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(image) {\n    console.log(image);\n    this.setState({\n      images: this.state.images.concat(image)\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    let uniqueName = val =>\n      !this.props.products.some(product => product.name === val);\n\n    if (this.props.productsLoading) {\n      return (\n        <div className='container'>\n          <div className='row'>\n            <Loading />\n          </div>\n        </div>\n      );\n    } else if (this.props.productsErrMess) {\n      return (\n        <div className='container loading  white-text'>\n          <div className='row heading'>\n            <div className='col-12'>\n              <br />\n              <br />\n              <br />\n              <br />\n              <h3>{this.props.productsErrMess}</h3>\n            </div>\n          </div>\n        </div>\n      );\n    } else\n      return (\n        <div className='container  white-text '>\n          <div className='row justify-content-center mt-3'>\n            <div className='col-12 mt-5'>\n              <h3 align='center'> Upload a product</h3>\n            </div>\n          </div>\n          <div className='row row-content justify-content-center'>\n            <LocalForm\n              onSubmit={values => {\n                if (\n                  (values.bid &&\n                    Number(values.max_bid) > Number(values.price) &&\n                    Number(values.incr) <=\n                      Number(values.max_bid - values.price) / 2) ||\n                  !values.bid\n                ) {\n                  var input = document.querySelector('input[type=\"file\"]');\n                  this.props.postProduct(\n                    values.name,\n                    values.cat,\n                    values.description,\n                    values.price,\n                    values.bid,\n                    values.max_bid,\n                    values.incr,\n                    input.files\n                  );\n                } else if (Number(values.max_bid) < Number(values.price)) {\n                  alert(\n                    'Maximum price should be greater than the minimum price'\n                  );\n                } else {\n                  alert(\n                    'Incremental price can be at most half the range of bidding'\n                  );\n                }\n              }}\n            >\n              <div className=\"card-detail\">\n              <Row className='form-group'>\n                <Label htmlFor='name' md={2}>\n                  Name{' '}\n                </Label>\n                <Col md={4}>\n                  <Control.text\n                    model='.name'\n                    id='name'\n                    name='name'\n                    placeholder='Name of product'\n                    className='form-control'\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      uniqueName\n                    }}\n                  />\n                  <Errors\n                    className='text-danger'\n                    model='.name'\n                    show='touched'\n                    messages={{\n                      required: 'Required',\n                      minLength: ' Must be greater than 2 characters',\n                      uniqueName:\n                        ' There exists a product with this name already'\n                    }}\n                  />\n                </Col>\n                <Label htmlFor='cat' md={2}>\n                  Category\n                </Label>\n                <Col md={4}>\n                  <Control.select\n                    model='.cat'\n                    name='cat'\n                    id='cat'\n                    className='form-control'\n                    defaultValue='Stationary'\n                  >\n                    <option>Stationary</option>{' '}\n                    <option>Electronic Gadgets</option>\n                    <option>Bicycles</option> <option>Clothes</option>\n                    <option>Sports</option> <option>Books</option>\n                    <option>Others</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className='form-group'>\n                <Col md={2} >\n                  <Control.checkbox\n                    model='.bid'\n                    id='bid'\n                    name='bid'\n                    className='form-control'\n                    disabled={false}\n                    checked={this.state.bid}\n                    defaultChecked={this.state.bid}\n                    onChange={e => {\n                      this.setState({ bid: !this.state.bid });\n                    }}\n                  />\n                </Col>\n                <Col md={8}>\n                  <Label check htmlFor='bid'>\n                    {' '}\n                    Allow Bidding\n                  </Label>\n                </Col>\n              </Row>\n              {this.state.bid ? (\n                <React.Fragment>\n                  <Row className='form-group'>\n                    <Label htmlFor='price' md={4}>\n                      Minimum Price (in &#8377;){' '}\n                    </Label>\n                    <Col md={8}>\n                      <Control.text\n                        model='.price'\n                        id='price'\n                        name='price'\n                        defaultValue={10}\n                        className='form-control'\n                        validators={{\n                          requiredNum,\n                          minVal: minVal(10),\n                          isNumber\n                        }}\n                      />\n                      <Errors\n                        className='text-danger'\n                        model='.price'\n                        show='touched'\n                        messages={{\n                          requiredNum: ' Required',\n                          minVal: ' Must be greater than 10 Rs.',\n                          isNumber: ' Must be a number'\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className='form-group'>\n                    <Label htmlFor='max_bid' md={4}>\n                      Maximum Price (in &#8377;){' '}\n                    </Label>\n                    <Col md={8}>\n                      <Control.text\n                        model='.max_bid'\n                        id='max_bid'\n                        name='max_bid'\n                        defaultValue={100000}\n                        className='form-control'\n                        validators={{\n                          requiredNum,\n                          maxVal: maxVal(100000),\n                          isNumber\n                        }}\n                      />\n                      <Errors\n                        className='text-danger'\n                        model='.max_bid'\n                        show='touched'\n                        messages={{\n                          requiredNum: ' Required',\n                          maxVal: ' Must be less than 100000 Rs.',\n                          isNumber: ' Must be a number'\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className='form-group'>\n                    <Label htmlFor='incr' md={4}>\n                      Minimum Increment (in &#8377;){' '}\n                    </Label>\n                    <Col md={8}>\n                      <Control.text\n                        model='.incr'\n                        id='incr'\n                        name='incr'\n                        defaultValue={10}\n                        className='form-control'\n                        validators={{\n                          requiredNum,\n                          minVal: minVal(10),\n                          maxVal: maxVal(10000),\n                          multiple: multiple(10),\n                          isNumber\n                        }}\n                      />\n                      <Errors\n                        className='text-danger'\n                        model='.incr'\n                        show='touched'\n                        messages={{\n                          requiredNum: ' Required',\n                          minVal: ' Must be greater than 10 Rs.',\n                          maxVal: ' Must be less than 10000 Rs.',\n                          multiple: ' Must be a multiple of 10',\n                          isNumber: ' Must be a number'\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                </React.Fragment>\n              ) : (\n                <Row className='form-group'>\n                  <Label htmlFor='price' md={4}>\n                    Price (in &#8377;){' '}\n                  </Label>\n                  <Col md={8}>\n                    <Control.text\n                      model='.price'\n                      id='price'\n                      name='price'\n                      defaultValue={10}\n                      className='form-control'\n                      validators={{\n                        requiredNum,\n                        minVal: minVal(10),\n                        isNumber\n                      }}\n                    />\n                    <Errors\n                      className='text-danger'\n                      model='.price'\n                      show='touched'\n                      messages={{\n                        requiredNum: ' Required',\n                        minVal: ' Must be greater than 10 Rs.',\n                        isNumber: ' Must be a number'\n                      }}\n                    />\n                  </Col>\n                </Row>\n              )}\n              <Row>\n                <ImageUploader\n                  withIcon={true}\n                  label='Maximum 4 images, Recommended height : 500px, only .gif,.jpg,.png,.jpeg allowed'\n                  buttonText='Choose images'\n                  withLabel={true}\n                  onChange={this.onDrop}\n                  labelClass='text-secondary'\n                  imgExtension={['.jpg', '.gif', '.png', '.jpeg']}\n                  maxFileSize={5242880}\n                  withPreview\n                  className='uploader'\n                  name='images'\n                />\n              </Row>\n              <Row className='form-group'>\n                <Label htmlFor='description' md={2}>\n                  Description\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model='.description'\n                    id='description'\n                    name='description'\n                    rows='12'\n                    placeholder='Some description of the product'\n                    className='form-control'\n                  />\n                </Col>\n              </Row>\n              <Row className='align-self-center'>\n                <Col className='text-center'>\n                  <Button type='submit' className='bg-primary'>\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n              </div>\n            </LocalForm>\n          </div>\n          <br />\n        </div>\n      );\n  }\n}\n\nexport default UploadItem;\n","import React,{Component} from 'react';\nimport { Table } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent.js';\n\nfunction Renderbid ({bid,i}) {\n    const deadline = new Date( Date.parse(bid.updatedAt));\n   \n    return (\n            <React.Fragment>\n            <td>\n            {i}\n            </td>\n            <td>\n            <Link to={`/users/${bid.bidder._id}`}>\n            {bid.bidder.firstname+' '+bid.bidder.lastname}\n            </Link>\n            </td>\n            <td>\n            {bid.bidder.email}\n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(bid.createdAt)))}\n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(deadline)}\n            </td>\n            <td>\n                {\n                    bid.amount\n                }\n            </td>\n            </React.Fragment>\n       );\n}\n\nclass History extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n         }\n        this.i=1; \n    }\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n    let reqBids;\n    if(this.props.bids.bids&&this.props.product)\n       reqBids=this.props.bids.bids.filter((bid)=>(bid.product && (bid.product._id===this.props.product._id) ));\n    if (this.props.bids.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.bids.errMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading text-white\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if(this.props.bids.bids.length===0||!reqBids||reqBids.length===0){\n        return (\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12 text-center text-white\">\n                        <br/><br/><br/><br/>\n                        <h4>{'No bids yet'}</h4> \n                        <h4>{'Wait for a user to bid'}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        const list = reqBids.map((bid) => {\n            return (\n                    <tr key={bid._id}>\n                        <Renderbid bid={bid} \n                                     i={this.i++}\n                        />\n                    </tr>\n            );\n        });\n    \n        return(\n\n        <div className=\"container mt-6 text-center align-self-center full\">\n            <div className=\"row text-center justify-content-center\">\n            <div className=\"col-12 heading white-text\">\n                <h3>Bid History for <Link to={`/products/${this.props.product._id}`}>{this.props.product.name}</Link></h3>\n               <br/>\n               <br/>\n                <Table striped bordered hover responsive>\n        <thead>\n           <tr>\n            <th>S.No.</th>\n            <th>Name of bidder</th>\n            <th>Email</th>\n            <th>Bid made on</th>\n            <th>Bid updated on</th>\n            <th>Amount (in &#8377;)</th>\n           </tr>\n        </thead>\n        <tbody>\n            {list}\n        </tbody>\n        </Table>\n            <br/>\n            <br/>\n            </div>\n            </div>\n            </div>\n        );\n        }\n    }\n\n}\n\nexport default History;","// export const baseUrl=\"https://bhejo.herokuapp.com/api/\";\nexport const baseUrl=\"http://localhost:5000/api/\";","import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../baseUrl'\n\nexport const addProduct = (product) => ({\n  type: ActionTypes.ADD_PRODUCT,\n  payload: product\n});\n\nexport const postProduct = (name, cat, description, price, bid, max_bid, incr, images) => (dispatch) => {\n  let newProduct = new FormData();\n  newProduct.append('name', name);\n  newProduct.append('cat', cat);\n  newProduct.append('price', price);\n  newProduct.append('bid', bid);\n  if(max_bid)\n            newProduct.append('max_bid', max_bid);\n  if(incr)\n            newProduct.append('incr', incr);\n  newProduct.append('description', description);\n  newProduct.append('images', images[0]);  \n  newProduct.append('images', images[1]);  \n  newProduct.append('images', images[2]);  \n  newProduct.append('images', images[3]);  \n    const bearer = 'Bearer ' + localStorage.getItem('token');\n    return fetch(baseUrl + 'products', {\n        method: \"POST\",\n        body: newProduct,\n        headers: {\n          'Authorization': bearer\n        }\n     //   ,        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => { alert('Product uploaded successfully.\\nPending for approval by admin.');\n      return  dispatch(addProduct(response));})\n    .catch(error =>  { alert('Your product could not be added\\nError: '+error.message); });\n};\n\nexport const increaseView = (_id,originalViews) => (dispatch) => {\n  let views=JSON.parse(localStorage.getItem(\"viewed\"));\n  if(!views||views.indexOf(_id)===-1){\n    if(views)\n      {\n        views.push(_id);\n      }\n    else views=[_id];\n        localStorage.setItem(\"viewed\",JSON.stringify(views));\n    return fetch(baseUrl + 'products/views/' + _id, {\n      method: \"POST\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify({views: originalViews+1}),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => (dispatch(editProductdispatch(response))))\n  .catch(error =>  {  \n  alert('Your product could not be edited\\nError: '+error.message); });\n  }\n\n}\n\nexport const approveProduct = (_id) => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'products/approve/' + _id, {\n      method: \"POST\",\n      headers: {\n        'Authorization': bearer\n      }\n    //  ,     credentials: 'same-origin'\n    })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => (dispatch(editProductdispatch(response))))\n  .catch(error =>  {  \n  alert('Your product could not be edited\\nError: '+error.message); });\n  }\n\n\nexport const editProduct = (_id,name, cat, description, price, bid, max_bid, incr, images) => (dispatch) => {\n\n  const newProduct = {\n    name: name, cat: cat,\n    description: description, price: price,\n     max_bid: max_bid, bid: bid, \n     incr: incr, images: images\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'products/' + _id, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify(newProduct),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => (dispatch(editProductdispatch(response))))\n  .catch(error =>  {  \n  alert('Your product could not be edited\\nError: '+error.message); });\n};\n\nexport const editPassword = (_id,username,password) => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/password/' + _id, {\n    method: \"PUT\"\n  //  ,     credentials: 'same-origin'\n    ,      body: JSON.stringify({password: password}),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    } })\n.then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText+'\\n ');\n      error.response = response;\n      throw error;\n    }\n  },\n  error => {\n        throw error;\n  })\n.then(response => response.json())\n.then(response => { \n  let newCreds={username: username, password: password};\n  localStorage.removeItem('creds');\n  localStorage.setItem('creds', JSON.stringify(newCreds));\n  alert('Password changed successfully');\n  return dispatch(editPasswordDispatch(newCreds));})\n.catch(error =>  {  \nalert('Your password could not be changed\\nError: '+error.message); });\n}\n\nexport const editUser = (_id, firstname, lastname, room, email, block, hostel, phone, facebookProfile, showfacebook, showphone, showroom) => (dispatch) => {\n  const newUser = {\nfirstname: firstname,\nlastname: lastname,\nroom: room,\nemail: email,\nblock: block,\nhostel: hostel,\nphone: phone,\nfacebookProfile: facebookProfile,\nshowfacebook: showfacebook,\nshowphone: showphone,\nshowroom: showroom\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/' + _id, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => { \n    localStorage.removeItem('userinfo');\n    localStorage.setItem('userinfo', JSON.stringify(response));\n    return dispatch(editUserdispatch(response));})\n  .catch(error =>  {  \n  alert('Your profile could not be edited\\nError: '+error.message+'\\n May be someone has already registered with that Email ID or username'); });\n};\n\nexport const deleteProduct = (_id) => (dispatch) => {\n  \n  const bearer = 'Bearer ' + localStorage.getItem('token');    \n  return fetch(baseUrl + 'products/' + _id, {\n      method: \"DELETE\"\n    //  ,       credentials: \"same-origin\"\n      ,       headers: {\n        'Authorization': bearer\n      }\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(deleteProductdispatch(response)))\n  .catch(error =>  {alert('Your product could not be deleted\\nError: '+error.message); });\n};\n\nexport const fetchProducts = () => (dispatch) => {\n    dispatch(productsLoading(true));\n    return fetch(baseUrl+'products')\n        .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(products => dispatch(addProducts(products)))\n    .catch(error => dispatch(productsFailed(error.message)));\n}\n\n\nexport const fetchUsers = () => (dispatch) => {\n\n  dispatch(usersLoading(true));\n  return fetch(baseUrl+'users')\n      .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(users => dispatch(addUsers(users)))\n  .catch(error => dispatch(usersFailed(error.message)));\n}\n\n\nexport const productsLoading = () => ({\n    type: ActionTypes.PRODUCTS_LOADING\n});\n\nexport const productsFailed = (errmess) => ({\n    type: ActionTypes.PRODUCTS_FAILED,\n    payload: errmess\n});\n\nexport const addProducts = (products) => ({\n    type: ActionTypes.ADD_PRODUCTS,\n    payload: products\n});\n\nexport const addUsers = (users) => ({\n  type: ActionTypes.ADD_USERS,\n  payload: users\n});\n\nexport const usersLoading = () => ({\n  type: ActionTypes.USERS_LOADING\n});\n\nexport const editProductdispatch = (products) => ({\n  type: ActionTypes.EDIT_PRODUCT,\n  payload: products\n});\n\nexport const freezeProductdispatch = (bid) => ({\n  type: ActionTypes.FREEZE_BID,\n  payload: bid\n});\n\nexport const editUserdispatch = (USER) => ({\n  type: ActionTypes.EDIT_USER,\n  payload: USER\n});\n\nexport const editPasswordDispatch = (CREDS) => ({\n  type: ActionTypes.EDIT_PASSWORD,\n  payload: CREDS\n})\n\nexport const deleteProductdispatch = (resp) => ({\n  type: ActionTypes.DELETE_PRODUCT,\n  payload: resp\n});\n\nexport const requestLogin = (creds) => {\n  return {\n      type: ActionTypes.LOGIN_REQUEST,\n      creds\n  }\n}\n\nexport const receiveLogin = (response) => {\n  return {\n      type: ActionTypes.LOGIN_SUCCESS,\n      token: response.token,\n      userinfo: response.userinfo\n  }\n}\n\nexport const loginError = (message) => {\n  return {\n      type: ActionTypes.LOGIN_FAILURE,\n      message\n  }\n}\n\nexport const loginUser = (creds) => (dispatch) => {\n\n  dispatch(requestLogin(creds));\n  return fetch(baseUrl + 'users/login', {\n      method: 'POST',\n      headers: { \n          'Content-Type':'application/json' \n      },\n      body: JSON.stringify(creds)\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n      },\n      error => {\n          throw error;\n      })\n  .then(response => response.json())\n  .then(response => {\n      if (response.success) {\n        const time_to_login = Date.now() + 3600000;\n          // If login was successful, set the token in local storage\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('creds', JSON.stringify(creds));\n          localStorage.setItem('timer',JSON.stringify(time_to_login));\n          localStorage.setItem('viewed', JSON.stringify([]));\n          localStorage.setItem('userinfo', JSON.stringify(response.userinfo));    \n          setTimeout(()=>{fetchFavorites()},0);\n          setTimeout(()=>{\n            logoutUser();\n            alert('Your JWT token has expired. \\nPlease log in again to continue.');\n           },3600*1000);\n          // },25*1000); \n          // Dispatch the success action\n          dispatch(receiveLogin(response));\n      \n      }\n      else {\n          var error = new Error('Error ' + response.status);\n          error.response = response;\n          throw error;\n      }\n  })\n  .catch(error => {\n    alert(error.message+\"\\n Username and password didn't match\");\n     return dispatch(loginError(error.message));})\n};\n\nexport const registerUser = (creds) => (dispatch) => {\n\n\n  return fetch(baseUrl + 'users/signup', {\n      method: 'POST',\n      headers: { \n          'Content-Type':'application/json' \n      },\n      body: JSON.stringify(creds)\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n      },\n      error => {\n          throw error;\n      })\n  .then(response => response.json())\n  .then(response => {\n      if (response.success) {\n          // If Registration was successful, alert the user\n          alert('Registration Successful');\n        }\n      else {\n          var error = new Error('Error ' + response.status);\n          error.response = response;\n          throw error;\n      }\n  })\n  .catch(error => alert(error.message+'\\n'+\n      'May be someone has already registered with that username or email \\nTry Entering a new username or email '))\n};\n\nexport const addBid = (bid) => ({\n  type: ActionTypes.ADD_BID,\n  payload: bid\n});\n\nexport const postBid = (productId,bidderId,amount) => (dispatch) => {\n    const newBid = {\n    product: productId,\n    bidder: bidderId,\n    amount: amount \n    };\n    console.log(newBid);\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n    return fetch(baseUrl + 'bids', {\n        method: \"POST\",\n        body: JSON.stringify(newBid),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': bearer\n        }\n        ,        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => { alert('Product bidd successfully');\n      return  dispatch(addBid(response));})\n    .catch(error =>  {\n      alert('Product could not be bidd\\nError: '+error.message+'\\n'); });\n};\n\nexport const editBid = (bidId,amount) => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'bids/' + bidId, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n    , headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } ,\n    body : JSON.stringify({amount: amount})})\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => { \n    alert('Bit edited successfully');\n    return dispatch(freezeProductdispatch(response));})\n  .catch(error =>  {  \n  alert('Bid could not be edited\\nError: '+error.message); });\n};\n\nexport const fetchBids = () => (dispatch) => {\n  let bidUrl;\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  bidUrl='bids';\n  dispatch(bidsLoading(true));\n  return fetch(baseUrl+bidUrl,{\n     headers: {\n        'Authorization': bearer\n       }\n  })\n      .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(bids => dispatch(addBids(bids)))\n  .catch(error => dispatch(bidsFailed(error.message)));\n}\n\n\n\nexport const bidsLoading = () => ({\n  type: ActionTypes.BIDS_LOADING\n});\n\nexport const bidsFailed = (errmess) => ({\n  type: ActionTypes.BIDS_FAILED,\n  payload: errmess\n});\n\nexport const addBids = (bids) => ({\n  type: ActionTypes.ADD_BIDS,\n  payload: bids\n});\n\nexport const usersFailed = (errmess) => ({\n  type: ActionTypes.USERS_FAILED,\n  payload: errmess\n});\n\n\nexport const requestLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_REQUEST\n  }\n}\n\nexport const receiveLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_SUCCESS\n  }\n}\n\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(requestLogout())\n  localStorage.removeItem('token');\n  localStorage.removeItem('creds');  \n  localStorage.removeItem('userinfo');  \n  localStorage.removeItem('viewed');\n  localStorage.removeItem('timer');\n  dispatch(receiveLogout())\n}\n\nexport const postFavorite = (productId) => (dispatch) => {\n\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n\n  return fetch(baseUrl + 'favorites/' + productId, {\n      method: \"POST\",\n      body: JSON.stringify({\"_id\": productId}),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(favorites => { dispatch(addFavorites(favorites)); })\n  .catch(error => dispatch(favoritesFailed(error.message)));\n}\n\nexport const deleteFavorite = (productId) => (dispatch) => {\n\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n\n  return fetch(baseUrl + 'favorites/' + productId, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': bearer\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(favorites => { dispatch(addFavorites(favorites)); })\n  .catch(error => dispatch(favoritesFailed(error.message)));\n};\n\nexport const fetchFavorites = () => (dispatch) => {\n  dispatch(favoritesLoading(true));\n\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n\n  return fetch(baseUrl + 'favorites', {\n      headers: {\n          'Authorization': bearer\n      },\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      }\n      else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n  },\n  error => {\n      var errmess = new Error(error.message);\n      throw errmess;\n  })\n  .then(response => response.json())\n  .then(favorites => dispatch(addFavorites(favorites)))\n  .catch(error => dispatch(favoritesFailed(error.message)));\n}\n\nexport const favoritesLoading = () => ({\n  type: ActionTypes.FAVORITES_LOADING\n});\n\nexport const favoritesFailed = (errmess) => ({\n  type: ActionTypes.FAVORITES_FAILED,\n  payload: errmess\n});\n\nexport const addFavorites = (favorites) => ({\n  type: ActionTypes.ADD_FAVORITES,\n  payload: favorites\n});","export const PRODUCTS_LOADING = 'PRODUCTS_LOADING';\nexport const PRODUCTS_FAILED = 'PRODUCTS_FAILED';\nexport const ADD_PRODUCTS = 'ADD_PRODUCTS';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const EDIT_USER = 'EDIT_USER';\nexport const EDIT_PASSWORD = 'EDIT_PASSWORD';\nexport const BIDS_LOADING = 'BIDS_LOADING';\nexport const BIDS_FAILED = 'BIDS_FAILED';\nexport const ADD_BIDS = 'ADD_BIDS';\nexport const ADD_BID = 'ADD_BID';\nexport const FREEZE_BID = 'FREEZE_BID';\nexport const USERS_LOADING = 'USERS_LOADING';\nexport const USERS_FAILED = 'USERS_FAILED';\nexport const ADD_USERS = 'ADD_USERS';\nexport const FAVORITES_LOADING = 'FAVORITES_LOADING';\nexport const FAVORITES_FAILED = 'FAVORITES_FAILED';\nexport const ADD_FAVORITES = 'ADD_FAVORITES';","import React, {Component} from 'react';\nimport Header from './HeaderComponent.js';\nimport Footer from './FooterComponent.js';\nimport Home from './HomeComponent.js';\nimport Products from './ProductsComponent';\nimport Search from './SearchComponent';\nimport ProductDetail from './ProductDetailComponent';\nimport UserDetail from './UserDetailComponent';\nimport Profile from './ProfileComponent';\nimport Favorites from './FavoriteComponent';\nimport UploadItem from './UploadItemComponent';\nimport History from './HistoryComponent';\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Modal,ModalBody,ModalHeader,Button, Label, Col, Row} from 'reactstrap';\nimport { postProduct, fetchProducts, editBid, editProduct, deleteProduct, increaseView, loginUser, logoutUser, \n  registerUser, editUser, editPassword, postBid, approveProduct, fetchBids, fetchUsers, fetchFavorites, postFavorite, deleteFavorite} from '../redux/ActionCreators';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst requiredNum = (val) => !!(val);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst maxVal = (len) => (val) => !(val) || (val<= len);\nconst multiple = (num) => (val) => !(val) || (val%num===0);\nconst minVal = (len) => (val) => (val) && (val>= len);\nconst isNumber = (val) => !isNaN(Number(val));\n\nconst mapStateToProps= (state)=>{\n  return{\n    products: state.products,\n    auth: state.auth,\n    bids: state.bids,\n    users: state.users,\n    favorites: state.favorites\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProducts: () => { dispatch(fetchProducts())},\n  fetchBids: () =>{ dispatch(fetchBids())},\n  fetchUsers: () => { dispatch(fetchUsers())},\n  increaseView: (_id, originalViews) => dispatch(increaseView(_id, originalViews)),\n  postProduct: (name, cat, description, price, bid, max_bid, incr, images) => dispatch(postProduct(name, cat, description, price, bid, max_bid, incr, images)),\n  editProduct: (_id,name, cat, description, price, bid, max_bid, incr, images) => dispatch(editProduct(_id,name, cat, description, price, bid, max_bid, incr, images)),\n  deleteProduct: (_id) =>  dispatch(deleteProduct(_id)),\n  loginUser: (creds) => dispatch(loginUser(creds)),\n  logoutUser: () => dispatch(logoutUser()),\n  registerUser: (creds) => dispatch(registerUser(creds)),\n  editUser: (_id, firstname, lastname, room, email, block, hostel, phone, facebookProfile, showfacebook, showphone, showroom) => dispatch(editUser(_id, firstname, lastname, room, email, block, hostel, phone, facebookProfile, showfacebook, showphone, showroom)),\n  editPassword : (_id,username,password) => dispatch(editPassword(_id,username,password)),\n  editBid: (bidId,amount) => dispatch(editBid(bidId,amount)),\n  postBid: (productId,bidderId,amount) => (dispatch(postBid(productId,bidderId,amount))),\n  fetchFavorites: () => dispatch(fetchFavorites()),\n  postFavorite: (productId) => dispatch(postFavorite(productId)),\n  deleteFavorite: (productId) => dispatch(deleteFavorite(productId)),\n  approveProduct: (productId) => dispatch(approveProduct(productId))\n});\nlet username='';\nclass Main extends Component {\n  \n  componentDidMount() {\n    this.props.fetchProducts();\n    this.props.fetchBids();\n    const timer = JSON.parse(localStorage.getItem('timer'));\n    if (timer && (Date.now() > timer)) {\n      logoutUser();\n     }\n    this.timer = setInterval(() => {\n      if(this.props.auth.isAuthenticated){\n        let Newusername='';\n        if(username==='')\n        {\n                 this.props.fetchFavorites();\n          username=this.props.auth.user.username;\n         }\n        Newusername=this.props.auth.user.username;\n        if(username!==Newusername)\n        {\n        username=Newusername;\n        this.props.fetchFavorites();\n        }\n      }\n    }, 1000);\n      this.props.fetchUsers();\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n}\n    constructor(props){\n        super(props);\n        this.state={\n          isDeleteModalOpen: false,\n          isEditModalOpen: false,\n          selectedProduct: null,\n          bid: false,\n        };\n        this.toggleDeleteModal=this.toggleDeleteModal.bind(this);\n        this.toggleEditModal=this.toggleEditModal.bind(this);\n        this.changeSelected=this.changeSelected.bind(this);\n        this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\n        }\n\n      handleSubmitEdit(values) {\n        if((values.bid&&(values.max_bid>values.price)&&(values.incr<=(values.max_bid-values.price)/2))||(!values.bid))\n        {\n        this.toggleEditModal();\n        this.props.editProduct(this.state.selectedProduct._id,values.name, values.cat, values.description, values.price, values.bid, values.max_bid, values.incr, values.images);     \n        }\n        else if(values.max_bid<values.price)\n        {\n          alert('Maximum price should be greater than the minimum price');\n        }\n        else {\n          alert('Incremental price can be at most half the range of bidding');\n        }\n      }\n    \n    changeSelected(_id){\n      this.setState({selectedProduct:this.props.products.products.filter((product)=>(product._id===_id))[0]});\n      this.setState({bid: this.props.products.products.filter((p)=>(p._id===_id))[0].bid});\n    }\n\n    toggleDeleteModal(){\n      this.setState({isDeleteModalOpen: !this.state.isDeleteModalOpen})\n    }\n    \n    toggleEditModal(){\n      this.setState({isEditModalOpen: !this.state.isEditModalOpen});\n    }\n\n    render(){\n      const ProductWithId = ({match}) => {\n      let selectedProduct=this.props.products.products.filter((product) => (product._id)===(match.params.productId))[0]\n      let notFoundErr=null;\n      if(selectedProduct===undefined){\n      notFoundErr=(\"\\n\\n Error 404 :  Product not found\");\n      }  \n      return(\n          <ProductDetail product={selectedProduct}\n          isLoading={this.props.products.isLoading}\n          errMess={this.props.products.errMess||notFoundErr}\n          toggleEditModal={this.toggleEditModal}\n          changeSelected={this.changeSelected}\n          increaseView={this.props.increaseView}\n          user={this.props.auth}\n          approveProduct={this.props.approveProduct}\n          addToView={this.addToView}\n          postBid={this.props.postBid}\n          bids={this.props.bids}\n          editBid={this.props.editBid}\n          favorite={\n            this.props.auth.isAuthenticated?\n            ((this.props.favorites.favorites===null) ? true : this.props.favorites.favorites.products.some((product) => product._id === match.params.productId))\n            : false\n          }\n          postFavorite={this.props.postFavorite}\n          />\n          );\n      };\n    \n      const UserWithId = ({match}) => {\n        let selectedUser=this.props.users.users.filter((user) => ((user._id)===(match.params.userId)))[0];\n        let notFoundErr=null;\n        if(selectedUser===undefined){\n        notFoundErr=(\"\\n\\n Error 404 :  User not found\");\n        }  \n        return(\n            <UserDetail user={selectedUser}\n            isLoading={this.props.users.isLoading}\n            errMess={this.props.users.errMess||notFoundErr}\n            /> \n            );\n        };\n   \n        const HistoryWithId =({match}) =>{\n          let selectedProduct=this.props.products.products.filter((product)=>(product._id===(match.params.productId)))[0];          \n          return (<History\n                      bids={this.props.bids}\n                      auth={this.props.auth}\n                      product={selectedProduct}\n                     />);\n          }\n        const OwnerProduct = ({match}) => {\n          let selectedUser;\n          let notFoundErr=null;\n          \n          let selectedProduct=this.props.products.products.filter((product) => ((product._id)===(match.params.productId)))[0];\n          if(selectedProduct)\n            selectedUser=selectedProduct.owner;\n          else \n             notFoundErr=(\"\\n\\n Error 404 :  User not found\");  \n          if(selectedUser===undefined){\n          notFoundErr=(\"\\n\\n Error 404 :  User not found\");\n          }  \n          return(\n              <UserDetail user={selectedUser}\n              isLoading={this.props.products.isLoading}\n              errMess={this.props.products.errMess||notFoundErr}\n              /> \n              );\n          };\n\n      const PrivateRouteCommon = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n      const PrivateRouteAdmin = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n      const PrivateRoute = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n      let uniqueName= (defaultName)=>(val) =>(!this.props.products.products.some((product)=>(product.name===val))||(val===defaultName))\n\n    return ( \n          <div className=\"App\">\n          <Header auth={this.props.auth} \n          loginUser={this.props.loginUser} \n          logoutUser={this.props.logoutUser}\n          registerUser={this.props.registerUser}\n          />\n          <Switch location={this.props.location}>\n                      <Route exact path='/home' component={() => <Home \n                      products={this.props.products.products.filter((product)=>(product.approved))}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n            />} />\n                  <Route exact path='/search' component={() => <Search \n                      products={this.props.products.products.filter((product)=>(product.approved))}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n              />}\n                />\n\n                      <Route exact path='/books' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Books\"&&product.approved))}\n                      title=\"Books\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n<PrivateRouteAdmin exact path='/pending' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(!product.approved))}\n                      title=\"Pending Products\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n\n<PrivateRoute exact path='/uploads' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.owner && (product.owner._id===this.props.auth.userinfo._id)))}\n                      title=\"My Uploads\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n                      \n                      <Route exact path='/stationary' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Stationary\"&&product.approved))}\n                      title=\"Stationary\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n\n<Route exact path='/electronics' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Electronic Gadgets\"&&product.approved))}\n                      title=\"Electronic Gadgets\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n\n<Route exact path='/bicycles' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Bicycles\"&&product.approved))}\n                      title=\"Bicycles\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n\n<Route exact path='/clothes' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Clothes\"&&product.approved))}\n                      title=\"Clothes\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n\n<Route exact path='/sports' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Sports\"&&product.approved))}\n                      title=\"Sports\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n\n<Route exact path='/others' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Others\"&&product.approved))}\n                      title=\"Others\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                      favorites={\n                        this.props.auth.isAuthenticated?\n                        (this.props.favorites.favorites)\n                        : false\n                      }\n                      postFavorite={this.props.postFavorite}\n/>}/>\n                      \n                      <Route exact path='/products/:productId' component={ProductWithId} />\n                      <Route path='/products/:productId/owner' component={OwnerProduct} />\n                      <PrivateRouteCommon exact path='/profile' component={() => <Profile\n                      auth={this.props.auth}\n                      editUser={this.props.editUser} \n                      editPassword={this.props.editPassword}/>}\n                      />\n                      <PrivateRoute exact path='/upload_product' component={() =>(\n                      <UploadItem\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\n                      postProduct={this.props.postProduct}\n                      products={this.props.products.products}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      />\n                      )}/>\n                       <PrivateRoute exact path='/bid_history/:productId' component={HistoryWithId}\n                />\n                     <PrivateRouteCommon exact path=\"/favorites\" component={() => <Favorites \n                     favorites={this.props.favorites}\n                      deleteFavorite={this.props.deleteFavorite} \n                      fetchFavorites={this.props.fetchFavorites}/>}\n\n                    />\n                      <Route path='/users/:userId' component={UserWithId}/>\n                      <Redirect to=\"/home\"/>\n          </Switch>\n        <Footer/>\n        <Modal isOpen={this.state.isDeleteModalOpen} toggle={this.toggleDeleteModal}>\n                     <ModalHeader toggle={this.toggleDeleteModal}>\n                         Confirm Deletion\n                     </ModalHeader>\n                     <ModalBody>\n                       Product details : <br/><br/>\n                        Name : {this.state.selectedProduct?this.state.selectedProduct.name:''} <br/>\n                        Category : {this.state.selectedProduct?this.state.selectedProduct.cat:''} <br/>\n                        {this.state.selectedProduct?(this.state.selectedProduct.bid?('Bidding Range : '+this.state.selectedProduct.price+' - '+this.state.selectedProduct.max_bid):('Price : '+this.state.selectedProduct.price)):''} <br/> <br/>\n                        Are you sure you wish to delete this product ? <br/><br/>\n         <Button color=\"danger\" onClick={()=>{\n           this.props.deleteProduct(this.state.selectedProduct._id);\n           this.toggleDeleteModal();}}>Yes</Button>{' '}  \n         <Button color=\"warning\" onClick={()=>{\n           this.toggleDeleteModal();\n         }}>No</Button>\n                     </ModalBody>\n          </Modal>\n          {this.state.selectedProduct?(\n                 <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\n                     <ModalHeader toggle={this.toggleEditModal}>\n                         Edit a product\n                     </ModalHeader>\n                     <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmitEdit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        defaultValue={this.state.selectedProduct.name}\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3),\n                                            uniqueName: uniqueName(this.state.selectedProduct.name)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            uniqueName: ' There exists a product with this name already'\n                                        }}\n                                     />\n                                </Col>\n                            </Row> \n                            <Row className=\"form-group\">                   \n                            <Col md={4}>\n                            <Control.checkbox model=\".bid\" id=\"bid\" name=\"bid\" \n                            className=\"form-control\" disabled={false}\n                            checked={this.state.bid}\n                            defaultChecked={this.state.bid}\n                            onChange={(e)=>{this.setState({bid: !this.state.bid})}}/>\n                            </Col>\n                            <Col md={8}>\n                            <Label check htmlFor=\"bid\"> Allow Bidding</Label>\n                            </Col>\n                            </Row>\n                            {\n                              (this.state.bid) ? (\n                                <React.Fragment>\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"price\" md={4}>Minimum Price (in &#8377;) </Label>\n                                <Col md={8}>\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\n                                        defaultValue={this.state.selectedProduct.price}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(10),isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".price\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: ' Required',\n                                            minVal: ' Must be greater than 10 Rs.',\n                                            isNumber: ' Must be a number'\n                                         }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"max_bid\" md={4}>Maximum Price (in &#8377;) </Label>\n                            <Col md={8}>\n                                <Control.text model=\".max_bid\" id=\"max_bid\" name=\"max_bid\"\n                                    defaultValue={this.state.selectedProduct.max_bid}\n                                    className=\"form-control\"\n                                    validators={{\n                                        requiredNum, maxVal: maxVal(100000),isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".max_bid\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requiredNum: ' Required',\n                                        maxVal: ' Must be less than 100000 Rs.',\n                                        isNumber: ' Must be a number'\n                                     }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"incr\" md={4}>Minimum Increment (in &#8377;) </Label>\n                            <Col md={8}>\n                                <Control.text model=\".incr\" id=\"incr\" name=\"incr\"\n                                    defaultValue={this.state.selectedProduct.incr}\n                                    className=\"form-control\"\n                                    validators={{\n                                        requiredNum, minVal: minVal(10),maxVal: maxVal(10000),multiple: multiple(10),\n                                        isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".incr\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requiredNum: ' Required',\n                                        minVal: ' Must be greater than 10 Rs.',\n                                        maxVal: ' Must be less than 10000 Rs.',\n                                        multiple: ' Must be a multiple of 10',\n                                        isNumber: ' Must be a number'\n                                     }}\n                                 />\n                            </Col>\n                        </Row>\n                        </React.Fragment>\n                              ) :\n                              (\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"price\" md={4}>Price (in &#8377;) </Label>\n                                <Col md={8}>\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\n                                        defaultValue={this.state.selectedProduct.price}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(10),isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".price\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: ' Required',\n                                            minVal: ' Must be greater than 10 Rs.',\n                                            isNumber: ' Must be a number'\n                                         }}\n                                     />\n                                </Col>\n                            </Row>\n                              )\n\n                            }\n\n                                        \n                        <Row className=\"form-group\">\n                            <Col>\n                            <Label htmlFor=\"cat\">Category</Label>\n                            <Control.select model=\".cat\" id=\"cat\" className=\"form-control\" defaultValue={this.state.selectedProduct.cat}>\n                              <option>Stationary</option> <option>Electronic Gadgets</option>\n                              <option>Bicycles</option> <option>Clothes</option>\n                              <option>Sports</option> <option>Books</option> \n                              <option>Others</option>\n                                                          </Control.select>\n                            </Col>\n                        </Row>\n                     \n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\n                                        rows=\"12\"\n                                        defaultValue={this.state.selectedProduct.description}\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                          <Row>\n                          <Col className=\"ml-auto mr-auto\">\n                        <Button type=\"submit\" className=\"bg-primary\">\n                            Submit\n                        </Button>\n                        </Col>\n                        </Row>\n                    </LocalForm>\n                </ModalBody>\n               \n          </Modal>):(<React.Fragment/>)}\n\n          </div>\n           );     \n    }\n    }\n\n    export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n\n","import * as ActionTypes from './ActionTypes';\n\nconst Products = (state = { isLoading: true,\n    errMess: null,\n    products:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PRODUCTS:\n            return {...state, isLoading: false, errMess: null, products: action.payload};\n\n        case ActionTypes.PRODUCTS_LOADING:\n            return {...state, isLoading: true, errMess: null, products: []}\n\n        case ActionTypes.PRODUCTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        case ActionTypes.ADD_PRODUCT:\n            var product = action.payload;\n            return { ...state, products: state.products.concat(product)};\n\n        case ActionTypes.EDIT_PRODUCT:\n            var newproduct = action.payload;\n            return { ...state, products: state.products.map((product)=>\n                {\n                if(product._id===newproduct._id)\n                {\n                    return newproduct;\n                }\n            else {\n                    return product;\n            }\n                 })\n                }\n\n        case ActionTypes.DELETE_PRODUCT:\n        var resp = action.payload;\n        return { ...state, products: state.products.filter((product)=>{\n            return product._id!==resp._id}) }\n\n        default:\n            return state;\n    }\n};\nexport default Products;","import * as ActionTypes from './ActionTypes';\n\n// The auth reducer. The starting state sets authentication\n// based on a token being in local storage. In a real app,\n// we would also want a util to check if the token is expired.\nconst Auth = (state = {\n        isLoading: false,\n        isAuthenticated: localStorage.getItem('token') ? true : false,\n        token: localStorage.getItem('token'),\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\n        userinfo: localStorage.getItem('userinfo') ? JSON.parse(localStorage.getItem('userinfo')) : null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n                user: action.creds\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                token: action.token,\n                userinfo: action.userinfo\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n            \n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null,\n                userinfo: null\n            };\n\n        case ActionTypes.EDIT_USER:\n            return {...state,\n                userinfo: action.payload};\n\n        case ActionTypes.EDIT_PASSWORD:\n            return {\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default Auth;","import * as ActionTypes from './ActionTypes';\n\nconst Bids = (state = { isLoading: true,\n    errMess: null,\n    bids:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_BIDS:\n            return {...state, isLoading: false, errMess: null, bids: action.payload};\n\n        case ActionTypes.BIDS_LOADING:\n            return {...state, isLoading: true, errMess: null, bids: []}\n\n        case ActionTypes.BIDS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        case ActionTypes.ADD_BID:\n            var bid = action.payload;\n            return { ...state, bids: state.bids.concat(bid)};\n\n        case ActionTypes.FREEZE_BID:\n            var newbid = action.payload;\n            return { ...state, bids: state.bids.map((bid)=>\n                {\n                if(bid._id===newbid._id)\n                {\n                    return newbid;\n                }\n            else {\n                    return bid;\n            }\n                 })\n                }\n\n        default:\n            return state;\n    }\n};\nexport default Bids;","import * as ActionTypes from './ActionTypes';\n\nconst Users = (state = { isLoading: true,\n    errMess: null,\n    users:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_USERS:\n            return {...state, isLoading: false, errMess: null, users: action.payload};\n\n        case ActionTypes.USERS_LOADING:\n            return {...state, isLoading: true, errMess: null, users: []}\n\n        case ActionTypes.USERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\nexport default Users;","import * as ActionTypes from './ActionTypes';\n\nconst Favorites = (state = {\n        isLoading: true,\n        errMess: null,\n        favorites: null\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_FAVORITES:\n            return {...state, isLoading: false, errMess: null, favorites: action.payload};\n\n        case ActionTypes.FAVORITES_LOADING:\n            return {...state, isLoading: true, errMess: null, favorites: null};\n\n        case ActionTypes.FAVORITES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, favorites: null};\n\n        default:\n            return state;\n    }\n};\n\nexport default Favorites;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport  Products  from './products.js';\nimport Auth from './auth.js';\nimport Bids from './bids.js';\nimport Users from './users.js';\nimport Favorites from './favorites.js';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const ConfigureStore = ()=>{\n    const store=createStore(\n        combineReducers({\n            products: Products,\n            auth: Auth,\n            bids: Bids,\n            users: Users,\n            favorites: Favorites\n        }),\n        composeEnhancers(applyMiddleware(thunk))\n    );\n    return store;\n}","import React from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/store.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './App.css';\n\nconst store= ConfigureStore();\n\nfunction App() {\n  return ( \n    <Provider store={store}>\n    <BrowserRouter>\n      <div className=\"App\">\n       <Main/>\n      </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}